<html>
<head>
<title>Skyborne Adventure Quest</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

<%
var time_email = "1";
var email_jogador = "";
var codigo_jogo = "1000";
var jogo_fisico = "s";
var id_jogo = 1;
%>

<script>
<%
console.log('Vai validar simulacao');

if (typeof simulacao !== 'undefined') {
	console.log('Validou simulacao');
	var simulation = true;
	

	%>
	var mpm = new Map();
	var mapRoiHistoriasL = new Map();
	var acesso = '<%=externo%>';

	function sleep(milliseconds) {
		const date = Date.now();
		let currentDate = null;
		do {
			currentDate = Date.now();
		} while (currentDate - date < milliseconds);
	}
	<%

	var mapPecasMapeadas = new Map();

	if(mpm !== 'undefined'){
		var mapPecasMapeadas = mpm;
	}

	console.log('*** '+new Date()+' - Vai validar map: ' + mapPecasMapeadas.size);

	for (const [key,value] of mapPecasMapeadas){%>
		
			mpm.set('<%=key%>', {'x':<%=value.x%>, 'y':<%=value.y%>});
			// console.log('Kwy: ' + <%=key%>);
		
	<%}%>

	console.log('*** '+new Date()+' - Vai carregar mpm ' + mpm.size);
	sleep(3000);
    console.log('*** '+new Date()+' - Carregou mpm'  + mpm.size);

	if(mapRoiHistoriasL.size == 0){
		<% for (var [key, value] of mapRoiHistorias){ %>
			// console.log("keyroi: <%=key%>");
			mapRoiHistoriasL.set('<%=key%>', <%=value%>);
		<%}%>

	} <%
	
}

%>



</script>

<link rel="shortcut icon" href="/imagens/favicon.ico" type="image/x-icon" />
<link href='../../assets/css/dragula.css' rel='stylesheet' type='text/css' />

<%if(simulation){%>
	<link rel="stylesheet" href="../../assets/css/chat.css">
<%}%>



        <!-- App css -->
        <link href="../../novo_layout/assets/css/bootstrap.min.css" rel="stylesheet" type="text/css" />

<style> 



#animado {
    /* background: #008; */
    position: absolute;
    /* width: 400px;
	height: 0px; */
	left: 100px;
	top: 2px;
	text-align: center;
    /* border: 1px solid #00f; */
}

.texto-animado {
  font-size: 92px;
  color: #fff;
  text-align: center;
}

.posicao-sm {
	z-index:40;
	padding-top: 5px;
	padding-left: 10px;
	position: absolute;
}

.posicao-po {
	z-index:30;
	padding-top: 180px;
	padding-left: 10px;
	position: absolute;
}

.posicao-guerreiro {
	z-index:20;
	padding-top: 355px;
	padding-left: 10px;
	position: absolute;
}

.loader {
  border: 16px solid #f3f3f3;
  border-radius: 50%;
  border-top: 16px solid #3498db;
  width: 120px;
  height: 120px;
  -webkit-animation: spin 2s linear infinite; /* Safari */
  animation: spin 2s linear infinite;
}

/* Safari */
@-webkit-keyframes spin {
  0% { -webkit-transform: rotate(0deg); }
  100% { -webkit-transform: rotate(360deg); }
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.modal-container {
	width: 360px;
	margin-left: 10px;
	margin-right: 10px;
	text-align: left;
}
.modal-container-maior {
	width: 390px;
}

.modal-container-regras {
	padding-top: 65px;
	width: 700px;
	color: #FFF;
}

.modal-content-menor {
	background-color: #fefefe;
    margin: auto;
    padding: 10px;
    border: 1px solid #888;
    width: 30%;
	border-radius: 10px;
}


.modal-content-ranking {
	background-image: url("/imagens/fundos/fundo_ranking.png");
    margin: auto;
    padding: 10px;
    width: 450px;
	height: 438px;
	background-size: contain;
	border-radius: 10px;
}

.modal-content-sabio {
	background-image: url("/imagens/fundos/fundo_sabio.png");
    margin: auto;
    padding: 10px;
    width: 450px;
	height: 438px;
	background-size: contain;
	border-radius: 10px;
}

.modal-content-guerreiro {
	background-image: url("/imagens/fundos/fundo_guerreiro.png");
    margin: auto;
    padding: 10px;
    width: 450px;
	height: 438px;
	background-size: contain;
	border-radius: 10px;
}
.modal-content-governante {
	background-image: url("/imagens/fundos/fundo_governante.png");
    margin: auto;
    padding: 10px;
    width: 378px;
	height: 370px;
	background-size: contain;
	border-radius: 10px;
}


.modal-content-regras {
	background-image: url("/imagens/fundos/fundo_regras.png");
    margin: auto;
    padding: 10px;
    width: 1030px;
	height: 600px;
	background-size: contain;
	border-radius: 10px;
}

.texto-alerta {
	width: 280px;
}

.texto-alerta-daily {
	width: 550px;
}

.texto-alerta-retro {
	width: 650px;
}

.texto-mensagem-objetivo {
	width: 520px;
	padding-left: 160px;
	padding-bottom: 10px;
	text-align: left;
	font-size: 25px;
}

.texto-mensagem-papeis {
	width: 280px;
	padding-left: 10px;
	padding-bottom: 10px;
	text-align: left;
	font-size: 24px;
	color: #59361b;
	padding-top: 60px;
}

.texto-mensagem-planning {
	width: 520px;
	padding-left: 135px;
	padding-bottom: 10px;
	text-align: left;
	font-size: 25px;
}

.texto-mensagem-daily {
	width: 420px;
	padding-right: 100px;
	padding-bottom: 20px;
	text-align: left;
	font-size: 25px;
}

.texto-mensagem-retro {
	width: 490px;
	padding-right: 130px;
	padding-bottom: 20px;
	text-align: left;
	font-size: 25px;
}

.modal-content-alerta {
	padding-top: 150px;
	background-image: url(/imagens/game/fundo-mensagem-alerta.png);
	background-repeat: no-repeat;
	height: 340px;
	width: 390px;
	align-content: center;
}

.modal-content-objetivo {
	background-image: url(/imagens/game/fundo-mensagem-objetivo.png);
	background-repeat: no-repeat;
	height: 536px;
	width: 837px;
	padding-top: 100px;
	align-content: center;
}

.modal-content-papeis {
	background-image: url(/imagens/game/fundo-mensagem-papeis.png);
	background-repeat: no-repeat;
	height: 536px;
	width: 837px;
	padding-top: 100px;
	align-content: center;
}

.modal-content-papeis-po {
	//background-image: url(/imagens/game/fundo-mensagem-papeis-po.png);
	background-repeat: no-repeat;
}

.modal-content-planning {
	background-image: url(/imagens/game/fundo-mensagem-planning.png);
	background-repeat: no-repeat;
	height: 450px;
	width: 789px;
	padding-top: 200px;
	align-content: right;
}

.modal-content-daily {
	background-image: url(/imagens/game/fundo-mensagem-daily.png);
	background-repeat: no-repeat;
	height: 500px;
	width: 934px;
	padding-top: 110px;
	align-content: center;
}

.modal-content-retro {
	background-image: url(/imagens/game/fundo-mensagem-retrospective.png);
	background-repeat: no-repeat;
	height: 450px;
	width: 850px;
	padding-top: 200px;
	align-content: center;
}

.container {
	z-index: 400;
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	justify-content: center;
}

.appearance-select{
   -webkit-appearance: none;  /* Remove estilo padrão do Chrome */
   -moz-appearance: none; /* Remove estilo padrão do FireFox */
   appearance: none; /* Remove estilo padrão do FireFox*/
   background: url(/imagens/edicao/ico-seta-appearance.gif) no-repeat #eeeeee; /* Imagem de fundo (Seta) */
   background-position: 30px center;  /*Posição da imagem do background*/
   width: 60px; /* Tamanho do select, maior que o tamanho da div "div-select" */
   height:22px; /* Altura do select, importante para que tenha a mesma altura em todo os navegadores */
   border:1px solid #4F4F4F;
   margin: 1px;
   font-size: 14px;
   
}

/* The Modal (background) */
.modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 200; /* Sit on top */
    padding-top: 100px; /* Location of the box */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 13px;
  }

  .modal-regras {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 200; /* Sit on top */
    padding-top: 40px; /* Location of the box */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 13px;
  }
  
.modal-mensagens {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 200; /* Sit on top */
    padding-top: 10px; /* Location of the box */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 13px;
  }


  /* Modal Content */
  .modal-content {
    background-color: #fefefe;
    margin: auto;
    padding: 10px;
    border: 1px solid #888;
    width: 92%;
	border-radius: 10px;
  }
  
  /* The Close Button */
  .close {
    color: #aaaaaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
  }
  
  .close:hover,
  .close:focus {
    color: #e60d0d;
    text-decoration: none;
    cursor: pointer;
  }


.titulos {
  font-size: 32px;
}

.titulos-mensagens {
  font-size: 20px;
  color: #59361b;
}

.titulos-mensagens-modais {
  font-size: 20px;
  color: #59361b;
}

.posicao-pecas {
	left: 60%;
}

.nomes {
  font-size: 24px;
}

.texto-input {
  border-radius: 8px;
  border-color: #D3D3D3;
  background: #fff;/*#DCDCDC;*/
  padding: 14px; 
  width: 360px;
  text-align: center;
  font-size: 14px;
  text-align: left;
}

.box {
    font-size: 28px;
    padding: 2px;
	padding-top: 24px;
    text-align: center;
	font-family: "RegencyScriptFLF Regular";
}

.box-papeis {
    font-size: 20px;
    padding: 2px;
	padding-top: 24px;
    text-align: center;
	font-family: "RegencyScriptFLF Regular";
}

.box-texto {
    font-size: 24px;
	padding-top: 0px;
    text-align: center;
	vertical-align: center;
	font-family: "RegencyScriptFLF Regular";
}

.texto-regras-vermelho {
    color: red;
	font-weight:normal;
	font-size: medium;
	font-family: fantasy;
}

.texto-regras-azul {
    color: blue;
	font-weight: normal;
	font-size: medium;
	font-family: fantasy;
}

a:link, a:visited {
	text-decoration: none;
	color: #000
	}
a:hover {
	text-decoration: none; 
	color: #663300
	}
a:active {
	text-decoration: none
	}

.ir-topo-texto {
    font-size: 24px;
	padding-top: 0px;
    text-align: center;
	vertical-align: center;
	font-family: "RegencyScriptFLF Regular";
}

.box-texto-info {
    font-size: 24px;
	padding-left: 0px;
    text-align: center;
	font-family: "RegencyScriptFLF Regular";
	/* font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Droid Sans,Helvetica Neue,sans-serif; */
	font-weight: bold;
}

.font-modais {
    font-size: 18px;
	padding-left: 0px;
    text-align: center;
	font-family: "RegencyScriptFLF Regular";
	/* font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Droid Sans,Helvetica Neue,sans-serif; */
	font-weight: bold;
	color: #59361b;
}

.cor_totais {
	color: #59361b;
}



.cor_relogio {
	color: #ffffff;
	text-align: center;
}

@font-face {
	font-family: "RegencyScriptFLF Regular";
	src: url("/fonts/Burbank-Big-Condensed Black.ttf");
}

.font { font-family: "RegencyScriptFLF Regular"; }


    .dstyle
    {
        position: absolute;
		cursor: move;
    }
	.selected {
		border: 1px solid yellowgreen;
		
	}
	.tamanho-img {
		max-height: 100%;
		max-width: 100%;
	}
	

	.div-historias {
		width: 100%;
		height: 550px;
		margin: 0 auto;
		/*border: 1px solid red;*/
		background-repeat: no-repeat;
		background-size: 73%;
		background-position: center;
	}

	.div-ir-topo {
		max-height: 30px;
		padding-left: 125px;
		z-index: 110;
	}

	.div-card {
		width: 100%;
		max-height: 550px;
		padding-top: 6px;
		padding-left: 10px;
		z-index: 100;
	}


	/* kanban */
	
.droptarget {
  float: left; 
  width: 185px; 
  height: 470px;
  /* 
  padding-top: 10px;
  border: 5px solid rgb(241, 239, 239);
  padding-bottom: 10px;
  padding-left: 30px;
  padding-right: 30px;
  border-radius:         5px;
  box-shadow: 3px 3px 5px rgba(0,0,0,.2); */
  /*background: #bbcbff;*/
  background-image: url("/imagens/fundos/madeira_fundo.jpg");
  overflow:auto;/* rolagem na coluna do kanban */
}
.div-text {
  float: left; 
  width: 160px; 
  height: 120px;
  margin: 15px;
  padding: 10px;
  border: 1px solid #aaaaaa;
}
.colunas{
	height: 520px;
	width: 220px;
	padding-left: 18px;
	/*background-color: #bbcbff;*/
	background-image: url("/imagens/fundos/madeira_fundo.jpg");
	border-radius: 4px;
	box-shadow: 3px 3px 5px rgba(0,0,0,.2);
	margin: 4px;
	padding-top: 10px;
	padding-bottom: 10px;
	padding-left: 20px;
	padding-right: 30px;
}
.label{
	font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Droid Sans,Helvetica Neue,sans-serif;
	font-weight: bold;
	color: #FFF;
}
.font-cards {
	font-size: 10px;
	color: #4d2f18;
}
.textarea-text {
	border:none; 
	background: transparent; 
	outline: 0; 
	width: 150px; 
	height: 50px;
	overflow: auto;
	font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Droid Sans,Helvetica Neue,sans-serif;
}
.card {
    position: relative;
	margin-top: 10px;
	margin-bottom: 15px;
	font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Noto Sans,Ubuntu,Droid Sans,Helvetica Neue,sans-serif;
    width: 150px;
    min-height: 50px;
    padding: 7px;

    background: #FC3;
    border: 1px solid #FD5;

    -moz-border-radius:    5px;
    -webkit-border-radius: 5px;
    border-radius:         5px;

    -moz-box-shadow:    3px 3px 5px rgba(0,0,0,.2);
    -webkit-box-shadow: 3px 3px 5px rgba(0,0,0,.2);
    box-shadow:         3px 3px 5px rgba(0,0,0,.2);

    cursor: url(grab.cur);
    cursor: -moz-grab;

	
}

.yellow { background: #FC3; border-color: #FD5 } /*-- yellow is default */
.orange { background: #F91; border-color: #FA3 }
.blue   { background: #8DCCE0; border-color: #82C5F0 }
.red    { background: #EB7565; border-color: #E54 }
.green  { background: #4DF780; border-color: #9D6 }

div.sticky {
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  background-color: #fff;
  z-index: 100;
}

.rcorners {
  border-radius: 12px;
  border: 4px solid #DEC9AE;
  background: #E8DED4;
  margin-bottom: 4px;
  width: 92%;
  height: 100%px;
}

input[type="radio"] {
			-webkit-appearance: none;
			width: 90px;
			height: 90px;
			border: none;
			cursor: pointer;
			transition: border .2s ease;
			filter: grayscale(100%);
			margin: 0 5px;
			transition: all .2s ease;
}

input[type="radio"]:hover, input[type="radio"]:checked {
	filter:	grayscale(0);
}
			
input[type="radio"]:focus {
	outline: 0;
}

.mtt {
	position: fixed;
	bottom: 10px;
	right: 20px;
	color: #999;
	text-decoration: none;
	
	span {
		color: #e74c3c;
	}
	
	&:hover {
		color: #666;

		span {
			color: #c0392b;
		}
	}
}

.button {
  background-color: #008CBA; /* blue */
  border: none;
  color: white;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  border-radius: 4px;
}

.botao-salvar {
	background-image: url("/imagens/edicao/btn-salvar.png");
  background-size: 100%;
  height: 56px;
  width: 100%;
}

.efeito_pergaminho {
    line-height: 1;
	text-align:center;     
	width: 148px;    
	margin: 2px;    
	min-height:82spx;
	max-height:82px;
	padding-top:4px;
	margin-bottom: 8px;
	position:relative;   
    background-image: url("/imagens/fundos/fundo_tarefas_menor.png");
	background-size: 100%;
    border-radius: 5px;
    height: 120px;   
    padding-top: 10px;
    margin-right: 5px;
	padding-right: 10px;
}


.postit {
  line-height: 1;
  text-align:center;     
  width: 130px;    
  margin: 2px;    
  min-height:120px;
  max-height:120px;
  padding-top:4px;
  margin-bottom: 8px;
  position:relative;   
  border:1px solid #FD5;  
  border-top:6px solid #FC3;
  font-family: Arial, Helvetica, sans-serif; 
  /* font-size:22px;       */
  border-bottom-right-radius: 60px 5px;
  display:inline-block;    
   background: #FC3; /* Old browsers */
background: -moz-linear-gradient(-45deg, #FC3 81%, #FC3 82%, #FC3 82%, #ffffc6 100%); /* FF3.6+ */
/* background: -webkit-gradient(linear, left top, right bottom, color-stop(81%,#FC3), color-stop(82%,#FC3), color-stop(82%,#FC3), color-stop(100%,#ffffc6)); Chrome,Safari4+ */
background: -webkit-linear-gradient(-45deg, #FC3 81%,#FC3 82%,#FC3 82%,#ffffc6 100%); /* Chrome10+,Safari5.1+ */
background: -o-linear-gradient(-45deg, #FC3 81%,#FC3 82%,#FC3 82%,#ffffc6 100%); /* Opera 11.10+ */
background: -ms-linear-gradient(-45deg, #FC3 81%,#FC3 82%,#FC3 82%,#ffffc6 100%); /* IE10+ */
background: linear-gradient(135deg, #FC3 81%,#FC3 82%,#FC3 82%,#ffffc6 100%); /* W3C */
filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#FC3', endColorstr='#ffffc6',GradientType=1 ); /* IE6-9 fallback on horizontal gradient */
box-shadow:4px 4px 8px #999;

}


</style>
<link rel="stylesheet" href="/css/style.css" media="screen"/>
<!-- <script src="/js/ajax/libs/jquery/2.1.1/jquery.min.js"></script> -->
<script src="/js/ajax/libs/jquery/jquery-2.2.4.js"></script>
<script src="/js/ui/1.10.0/jquery-ui.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script src="/js/jquery.event.drag-2.2.js"></script>
<script src='/js/dragula.js'></script>



<script>

	jQuery(window).load(function() {	
		//Após a leitura da pagina o evento fadeOut do loader é acionado, esta com delay para ser perceptivo em ambiente fora do servidor.
		jQuery("#loader").delay(2000).fadeOut("slow");
		
		// Script da animação
		$("html, body").animate({ scrollTop: 0 }, "slow", function() {
			
			var millisecondsToWait = 1000;
	
			setTimeout(function() {
				//abrirModalObjetivo();
			}, millisecondsToWait);

			return false;
		});

  		
	});

var App = {};

</script>

<% var quantidade_dias = 20; %>

</head>
<body style="background-image: url(../../assets/images/paisagemgrama.png);" onload="location.href='#loader'" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">


<div id="content">


<div id="loader"></div>

<div class="sticky">


<div align="center" id="alerta-animado"></div>
<div class="font texto-animado" id="animado"></div>

<table id="Tabela_01" width="1291" height="88" border="0" cellpadding="0" cellspacing="0">
	<tr>
		<td class="box-texto" rowspan="8" width="150" height="42"><a href="#" onClick="abrirModalAval()"> <%=data_tarefas[0].nome_time%></a></td>
		<td width="115" height="28"></td>
		
		<td rowspan="1">
			<a href="#" onclick="abrirModal()"
				onmouseover="window.status='Abrir Regras';  return true;"
				onmouseout="window.status='';  return true;">
				<img src="/imagens/edicao/btn-regras.png" width="100%" border="0" alt=""></a></td>
		<td rowspan="1">
			<a href="#" onClick="abrirModalRank()" 
				onmouseover="window.status='Abrir tela de Ranking';  return true;">
				<img src="/imagens/edicao/btn-ranking.png" width="100%" border="0" alt=""></a></td>
		<td rowspan="1">
			<a href="#" onClick="abrirModalAval()" 
				onmouseover="window.status='Abrir tela de Avaliação';  return true;">
				<img src="/imagens/edicao/btn-avaliacao.png" width="100%" border="0" alt=""></a></td>
		<td rowspan="1">
			<a href="#" data-toggle='modal' data-target='#myModal-tarefa' onClick='carregar_tarefa(0)'
			 onmouseover="window.status='Editar Tarefa'; return true;">
				<img src="/imagens/edicao/btn-nova-tarefa.png" width="100%" border="0" alt=""></a></td>

		<td rowspan="1">
			<a href="/tarefa/list">
				<img src="/imagens/edicao/btn-backlog.png" width="100%" border="0" alt=""></a></td>
		<td rowspan="1">
			<a href="/home/logout">
				<img src="/imagens/edicao/btn-sair.png" width="100%" border="0" alt=""></a></td>
		<td width="1" height="28"></td>
	</tr>

	
</table>
</div>


<div class="posicao-sm" id="btn-sm">
	<a href="#" onclick="abrirModalSM()">
		<img src="/imagens/edicao/btn-sabio.png" width="45%" border="0" alt="">
	</a>
</div>
<div class="posicao-po" id="btn-po">
	<a href="#" onclick="abrirModalPO()">
		<img src="/imagens/edicao/btn-governante.png" width="45%" border="0" alt="">
	</a>
</div>
<div class="posicao-guerreiro" id="btn-po">
	<a href="#" onclick="abrirModalGuerreiro()">
		<img src="/imagens/edicao/btn-guerreiro.png" width="45%" border="0" alt="">
	</a>
</div>



<% 
var top_imagens = 0; 
%>

<div id="modal_tarefa" class="modal">
	<div class="modal-content-menor" id="div-tarefas">
		<span id="modal-tarefa" class="close">&times;</span>
	</div>

</div>

<div id="modal_aval" class="modal">
	<div class="modal-content-menor" id="div-avaliacoes">
		<span id="modal-aval" class="close">&times;</span>
	</div>
</div>


<div id="modal_rank" class="modal">
	<div class="modal-content-ranking" id="div-rank">
		<span id="modal-rank" class="close">&times;</span>
	</div>
</div>

<div id="modal_pena" class="modal" align="center">
	<div class="modal-content-alerta" id="div-penalidades">
		<!-- <span id="modal-penalidades" class="close">&times;</span> -->
	</div>
</div>



<div id="modal_objetivo" class="modal-mensagens" align="center">
	<div class="modal-content-objetivo" id="div-instr-objetivo">
	</div>
</div>

<%if(simulation){%>
	<div class="box-container" >
	<div class="box-chat" >
		<section class="msger">
			<header class="msger-header">
			  <div class="msger-header-title">
				<i class="fas fa-comment-alt"></i> Assistente de Aprendizado
			  </div>
			  <div class="buttons-box">
				<div class="msger-header-options">
					<span class="min"><i class="fas fa-window-minimize"></i></span>
				</div>
				<div class="msger-header-options">
					<span class="max"><i class="fas fa-window-maximize"></i></span>
				</div>
				<!-- <div class="msger-header-options">
					<span><i class="fas fa-window-close"></i></span>
				</div> -->
			  </div>
			</header>
		  
			<main class="msger-chat">
			  <!-- <div class="msg left-msg">
				<div
				 class="msg-img"
				 style="background-image: url(https://image.flaticon.com/icons/svg/327/327779.svg)"
				></div>
		  
				<div class="msg-bubble">
				  <div class="msg-info">
					<div class="msg-info-name">BOT</div>
					<div class="msg-info-time">12:45</div>
				  </div>
				  
				  <div class="msg-text">
					Leia a mensagem inicial do jogo com atenção, pois a restrição informada é estratégica. Em seguida clique no botão "Fechar".
					<br><br>Use o botão <span><i class="fas fa-window-minimize"></i></span> 
						para minimizar este bate-papo para ler as mensagens e depois clique no botão 
						<span><i class="fas fa-window-maximize"></i></span> para restaurar. 
						Todo o treinamento será conduzido por este bate-papo.
				  </div>
				</div>
			  </div> -->
		  
			  <!-- <div class="msg right-msg">
				<div
				 class="msg-img"
				 style="background-image: url(https://image.flaticon.com/icons/svg/145/145867.svg)"
				></div>
		  
				<div class="msg-bubble">
				  <div class="msg-info">
					<div class="msg-info-name">Sajad</div>
					<div class="msg-info-time">12:46</div>
				  </div>
		  
				  <div class="msg-text">
					You can change your name in JS section!
				  </div>
				</div>
			  </div> -->
			</main>
		  
			<div class="msger-inputarea">
			  <input type="text" id="campo-novo" class="msger-input" autocomplete='off' placeholder="Entre com sua messagem...">
			  <!-- <button type="submit" class="msger-send-btn">Enviar</button> -->
			  <button class='msger-send-btn' type='botao-salvar'  onClick='direcionar()'></button>
			</div>
		  </section>
		</div>
	</div>
	<%}%>

<div id="modal_sm" class="modal" align="center">
	<div class="modal-content-sabio" id="div-instr-sm">
		<span id="modal-sabio" class="close">&times;</span>
	</div>
</div>

<div id="modal_po" class="modal" align="center">
	<div class="modal-content-governante" id="div-instr-po">
		<span id="modal-governante" class="close">&times;</span>
	</div>
</div>

<div id="modal_guerreiro" class="modal" align="center">
	<div class="modal-content-guerreiro" id="div-instr-guerreiro">
		<span id="modal-guerreiro" class="close">&times;</span>
	</div>
</div>

<div id="modal_planning" class="modal-mensagens" align="center">
	<div class="modal-content-planning" id="div-instr-planning">
	</div>
</div>

<div id="modal_daily" class="modal-mensagens" align="center">
	<div class="modal-content-daily" id="div-instr-daily">
	</div>
</div>

<div id="modal_retro" class="modal-mensagens" align="center">
	<div class="modal-content-retro" id="div-instr-retro">
	</div>
</div>

<!-- The Modal -->
<div id="modal_times" class="modal-regras">

<!-- Modal content -->
<div class="modal-content-regras">
	<span id="close-regras" class="close">&times;</span>

		<div class="container" align="center">
		  <div class="modal-container  modal-container-regras" class="font-cards">
			<b>História</b><br>
			O reino de Marbleland está sendo ameaçado pelo avanço do impiedoso rei Orc das terras do Norte e precisa defender suas fronteiras e libertar aliados dominados e capturados. O rei Arthur reuniu os melhores guerreiros para as missões de resgate e você faz parte desta equipe. Agora é hora de avançar!
			<br>
		  	</br>

				<b>As missões</b><br>
				Geralmente duram de uma a 4 semanas no máximo.
				<br>O Governante precisa ser informado dos avanços a cada missão, para decidir os próximos passos na guerra.
				<br>
				<br>

				<b>Reconhecimento</b><br>
				Os guerreiros devem reconhecer os méritos de seus companheiros nas batalhas e isso mantém a equipe motivada para continuar avançando contra o inimigo. Para fazer isso o Guerreiro deve: 
				<br>1. Realizar a avaliação uma vez por semana;
				<br>2. Cada vez que avaliar, ganhar uma estrela de recompensa pela nobreza de reconhecer seus amigos;
				<br>3. Se não avaliar durante uma semana, perdeu a chance naquela semana.
				</br>
				<br>
				<b>Classificação</b>
				<br>Nível Bronze = possui de 0 até 30 estrelas;
				<br>Nível Prata = possui de 31 até 80 estrelas;
				<br>Nível Ouro = possui de 81 até 150 estrelas;
				<br>Nível Diamante = possui acima de 150 estrelas.
				
			</div>
		  
		  
		</div>
	

</div>

</div>

<div id="div-som-chat"></div>
<div id="div-inicio-tempo"></div>
<div id="div-fim-tempo"></div>

<div id="kanban2" class="div-historias" align="center">
	<table>
		<tr>
			
			<td>
				<div class="colunas">
					<label class="label">Product Backlog</label>
					<div id="div-backlog" align="center" class="droptarget"></div>
				</div>
			</td>
			
			<td>
				<div class="colunas">
					<label class="label">Sprint Backlog</label>
					<div id="div-sprint-backlog" align="center" class="droptarget"></div>
				</div>
			</td>
			<td>
				<div class="colunas">
					<label class="label">Fazer</label>
					<div id="div-fazer" align="center" class="droptarget"></div>
				</div>
			</td>
			<td>
				<div class="colunas">
					<label class="label">Fazendo</label>
					<div id="div-fazendo" align="center" class="droptarget"></div>
				</div>
			</td>
			<td>
				<div class="colunas">
					<label class="label">Pronto</label>
					<div id="div-feito" align="center" class="droptarget"></div>
				</div>
			</td>
		</tr>	
	</table>
</div>

</div>

</body>
</html>



<script>



<%if(!simulation){%>

	connectSocket();
	subscribe();

<%}%>	
	
	function connectSocket(){

		// App.socket = io('<%=url_sistema%>', 
        //           { transports: ['websocket'] }
        //        );

		App.socket = io.connect('<%=url_sistema%>');
		console.log(new Date() + ' - Connected');
	}

	function subscribe(){
		// passando o nome da sala, que neste momento sera por usuario logado
		App.socket.emit('subscribe', '<%=time%>');
		console.log(new Date() + ' - subscribed');
	}

<%if(!simulation){%>
	window.setInterval('subscribe()', 300000);
<%}%>

	var roi_atual_time = 0;
	
	/**
	* Inicio de texto alterado
	*/
	//metodo que carrega a tela atualizada entrar num jogo existente ou recarregar tela
	function iniciar(){
	
		<%if(simulation){%>

			carregarDados('', '');

		<%} else { %>

			App.socket.emit('carregar-controle', {
				x: 0,
				y: 0,
				div_atualizar: '',
				room: '<%=codigo_jogo%>-<%=time_email%>',
				id_jogo: '<%=id_jogo%>'
			});

			var millisecondsToWait = 6000;
		
			setTimeout(function() {
				// aqui devemos buscar as informações para recarregar todos os elementos da tela de forma dinamica
				// devemos percorrer todas as divs e chamar o metodo novo do server que deve retornar todas as posicoes do jogo ate o momento. com
				// isto podemos chamar o 'update_position' para desenhar na tela.
				// devemos acumular um jsonArray com chave e valor para cada div e ao carregar o jogo, percorrer este array para pegar a posicao x e y de cada div.
				// Desta forma, vamos atualizar somente peças ja mexidas, pois atualizamos este jsonarray somente quando mexemos pelo menos uma vez na div
				App.socket.emit('carregar-jogo', {
					x: 0,
					y: 0,
					div_atualizar: '',
					room: '<%=codigo_jogo%>-<%=time_email%>',
					id_jogo: '<%=id_jogo%>'
				});
				
			}, millisecondsToWait);

		<%}%>

	}
	
	iniciar();

	// carregarHistorias();
	// carregarHistoriasKanban();
	chamarCarregarTarefas();

	var dia_corrente = 1;

	// instrucoes objetivo
	var modal_objetivo = document.getElementById("modal_objetivo");

	// var span_pena = document.getElementsByClassName("close")[1];

	<%if(simulation){%>
		direcionarMensagem('');
	<%}%>

	function abrirModalObjetivo(){
		

		modal_objetivo.style.display = "block";

		$( "div" ).remove( "#div-objetivo" );

		const div = document.createElement('div');
		div.innerHTML = "<div id='div-objetivo'><div class='container box font'>"
			+"<span class='texto-alerta titulos'>Objetivo</span></br></br>"
			+"<span class='texto-mensagem-objetivo'>Montar um parque de dinossauros, vender ingressos e gerar o maior ROI.</br>"
				+"O Time deve montar quebra-cabeças de dinossauros e passeios para ganhar dinheiro quando concluídos.</br>"
				+"</span><span class='texto-mensagem-objetivo texto-regras-vermelho'>Atenção: </span><span class='texto-mensagem-objetivo'>Os passeios somente vão gerar dinheiro a partir do dia 6.</span></div><br>" 

		+"<div class='container'> "
		+"	<button class='button' type='button'  onClick='fecharModalObjetivo()''>Fechar</button> "
		+"</div></div>";


		document.getElementById('div-instr-objetivo').appendChild(div);

	}
	
	function fecharModalObjetivo(){
		modal_objetivo.style.display = "none";

		<%if(simulation){%>
			$(".max").click();

			document.getElementsByClassName("msger-input")[0].focus();
		<%}%>
	}

	// instrucoes sm
	var modal_sm = document.getElementById("modal_sm");
	

	function abrirModalSM(){
		

		modal_sm.style.display = "block";

		$( "div" ).remove( "#div-sm" );

		const div = document.createElement('div');
		div.innerHTML = "<div id='div-sm'><div class='container font'>"
			+"<span class='texto-mensagem-papeis'>Conhece uma variedade de técnicas milenares e orienta e conduz as missões, auxiliando os guerreiros com sabedoria ou removendo grandes obstáculos pelo caminho da vitória.</br></span>"
		+"</div>";


		document.getElementById('div-instr-sm').appendChild(div);

	}
	
	function fecharModalSM(){
		modal_sm.style.display = "none";
	}

	// instrucoes po
	var modal_po = document.getElementById("modal_po");

	var span_governante = document.getElementsByClassName("close")[4];

	span_governante.onclick = function() {
		modal_po.style.display = "none";
	}

	function abrirModalPO(){
		

		modal_po.style.display = "block";

		$( "div" ).remove( "#div-po" );

		const div = document.createElement('div');
		div.innerHTML = "<div id='div-po'><div class='container font'>"
			+"<span class='texto-mensagem-papeis'>É o mandatário do reino e dele partem todas as ordens para a execução das missões.</br></span>"

		+"</div></div>";


		document.getElementById('div-instr-po').appendChild(div);

	}
	
	function fecharModalPO(){
		modal_po.style.display = "none";
	}

	var modal_guerreiro= document.getElementById("modal_guerreiro");

	function abrirModalGuerreiro(){
		

		modal_guerreiro.style.display = "block";

		$( "div" ).remove( "#div-guerreiro" );

		const div = document.createElement('div');
		div.innerHTML = "<div id='div-guerreiro'><div class='container font'>"
			+"<span class='texto-mensagem-papeis'>Homens e Mulheres destemidos escolhidos para a execução das mais desafiadoras missões.</br></span>"

		+"</div></div>";


		document.getElementById('div-instr-guerreiro').appendChild(div);

	}

	// abrirModalObjetivo();

	//var audio_regressivo = new Audio('/audio/30-segundos.mp3');

<%if(!simulation){%>
	
	App.socket.on('update_position', function (data) {
		//console.log('Key: ' + data.x);
		
        var x = data.x;
		var y = data.y;

		// jquery code to move div here
		
		$("#left").val(x);
		$("#top").val(y);
		
		//console.log('Atualizar css client: ' + "#" + data.div_atualizar);

		$("#" + data.div_atualizar).css({
			left: x + "px",
			top: y + "px"
		});
		
	});

	App.socket.on('update_position_kanban', function (data) {
		
		//console.log('Atualizar css client: ' + "#" + data.div_atualizar);
		var node = document.createElement("DIV"); 
		var textnode = document.getElementById(data.div_atualizar);         // Create a text node
		node.appendChild(textnode);                              // Append the text to <li>
		document.getElementById(data.div_destino).appendChild(node);


	});

	App.socket.on('update_position_kanban_new', function (data) {	
		// somente atualizo a etapa caso tenha trocado de coluna
		if(data.target !== data.source){	
			document.getElementById(data.target).innerHTML = data.target_value.replace(' gu-transit', '');
		}

		document.getElementById(data.source).innerHTML = data.source_value.replace(' gu-transit', '');
	});

	App.socket.on('aplicar_atualizacao_quadro', function (data) {
		// somente atualizo a etapa caso tenha trocado de coluna
		$( "div" ).remove("#" + data.id_div );

		const div = document.createElement('div');
		div.setAttribute('class', 'efeito_pergaminho font-cards');
		div.setAttribute('id', data.id_div);
		
		div.innerHTML = data.div_cartao;

		document.getElementById(data.div_pai).appendChild(div);

	});


	App.socket.on('update_tempo', function (data) {
		// chamo a funcao que inicia a contagem de tempo da tela
		iniciarTempo(data.tempo_adicional);
	});
	
	App.socket.on('update_control', function (data) {

		console.log('Chegou aqui');
		
		// atualiza o total de pontos do dia
		element = document.getElementById('div_dia');
		element.innerHTML = data.dia;

		// atualizo o dia_corrente
		dia_corrente = data.dia;

		element = document.getElementById('div_total_dia');
		element.innerHTML = data.pontos_dia;

		element = document.getElementById('div_total_geral');
		element.innerHTML = data.pontos_geral;

		element = document.getElementById('info1');
		element.innerHTML = data.info1 + (data.info3 !== '' ? ' - ' + data.info3 : '');

		element = document.getElementById('div_roi_total');
		var roi = 0;
		

		if(typeof data.roi_total !== 'undefined'){
			roi = data.roi_total;
			roi_atual_time = roi;
		}

		element.innerHTML = "$ " + roi;
	
	});

	App.socket.on('update_control_evento', function (data) {

		element = document.getElementById('info1');
		element.innerHTML = data.info1;
	});

	App.socket.on('solicitar_aval', function (data) {
		abrirModalAval();
	});

	App.socket.on('update_financeiro', function (data) {

		console.log('Update fin ');
		var roi_dia = 0;

		console.log('1. data.roi_total: ' + data.roi_total);
		console.log('2. roi_atual_time: ' + roi_atual_time);

		if( data.roi_total > 0 ) {
			roi_dia = data.roi_total - roi_atual_time;
		} 

		console.log('3. roi_dia: ' + roi_dia);

		// atualiza o total roi deste time ate o momento
		element = document.getElementById('div_roi_total');
		element.innerHTML = "$ " + data.roi_total;

		roi_atual_time = data.roi_total;

		// animated
		if(roi_dia > 0){
			//document.getElementById("animado").style.backgroundImage = "url('/imagens/game/fundo-mensagem-roi.png')";
			
			element = document.getElementById('animado');
			//element.style.backgroundImage = "url('/imagens/game/fundo-mensagem-roi.png')";
			element.innerHTML = '+' + roi_dia;

			$("#animado").css("background-image", "url(/imagens/game/fundo-mensagem-roi.png)");
			$("#animado").css("background-repeat", "no-repeat");
			$("#animado").css("background-position", "center");
			$("#animado").css("padding-top", "450px");

			// jQuery('#main').css('opacity', '0');
			jQuery('#animado').css('height', '415px');
			jQuery('#animado').css('width', '490px');

			$("#animado").animate({opacity: 1}, 2000, function() {

				var millisecondsToWait = 2000;
				setTimeout(function() {
					$("#animado").animate({ opacity: 0 }, 2000, function () {
						$(this).css('width', '0px');
					})
				}, millisecondsToWait);				
			});
		}

		console.log('Roi: ' + data.roi_total);
	});

<%}%>	
	
	$(".dstyle").draggable({
		containment: "parent",
        drag: function (event, ui) {

			var info1 = document.getElementById("info1").innerHTML; 

			<%if(!simulation){%>
				if(! info1.includes("Execu")){
					abrirModalMensagem('Este não é o momento para montar peças!');
					return false;
				}
				else{

				
					var coord = $(this).position();

					var nome_div_atualizar = this.id;
					
					App.socket.emit('receive_positions', {
						x: coord.left,
						y: coord.top,
						altura: $(this).height(),
						largura: $(this).width(),
						div_atualizar: nome_div_atualizar,
						room: '<%=time%>'
					});
				}
				
			<%} else {%>
				abrirModalMensagem('Durante a simulação as peças serão montadas automaticamente!');
				return false;
			<%}%>
			
			
		}
	  }).dblclick(function(e) {

		//alert('oi');
		//$( this ).toggleClass("selected");

	});
	
	jQuery(function($){
	$('.dstyle')
		.click(function(){
			//$( this ).toggleClass("selected");
		})
		.drag("init",function(){
			if ( $( this ).is('.selected') )
				return $('.selected');
		})
		/*.drag(function( ev, dd ){
			$( this ).css({
				top: dd.offsetY,
				left: dd.offsetX
			});
			
			var nome_div_atualizar = this.id;
			//console.log('Vai chamar o server passando a div: ' + nome_div_atualizar);
	
			App.socket.emit('receive_positions', {
				x: coord.left,
				y: coord.top,
				div_atualizar: nome_div_atualizar,
				room: '<%=codigo_jogo%>-<%=time_email%>'
			});
		});*/
	});

	/**
	* Fim de texto alterado
	*/

var interval = null;

var mapMensagemPlanning = new Map();
var mapMensagemDaily = new Map();
var mapMensagemRetro = new Map();

function iniciarTempo(tempo_adicional){

	var info1 = document.getElementById("info1").innerHTML; 

	if(info1.includes("Reuni") && !mapMensagemDaily.get(dia_corrente) && dia_corrente < 5 && tempo_adicional > 0){
		mapMensagemDaily.set(dia_corrente, 1);
		abrirModalDaily();
	}

	if(info1.includes("Planning") && !mapMensagemPlanning.get(dia_corrente) && dia_corrente <= 6 && tempo_adicional > 0){
		mapMensagemPlanning.set(dia_corrente, 1);
		abrirModalPlanning();
	}

	if(info1.includes("Retro") && !mapMensagemRetro.get(dia_corrente) && dia_corrente < 11 && tempo_adicional > 0){
		mapMensagemRetro.set(dia_corrente, 1);
		abrirModalRetro();
	}

	var tempo = parseInt(tempo_adicional);

	var dt1 = new Date();

	dt1.setSeconds( dt1.getSeconds() + tempo );
	var tempo = "";
	var minuto_formatado = "";
	var segundo_formatado = "";
	//var info2_corrente = "";// vou usar para proximos eventos

	// restaurando a cor do estilo da font
	document.getElementById('div_relogio').style.color = "black";


	if(interval != null){
		clearInterval(interval);
	}

	//var tocou_inicio = false;

	interval = setInterval( function() {

		/*if(! tocou_inicio){
			console.log("tocar inicio")
			// dispara o som de inicio do tempo
			var mp3Source1 = '<source src="/audio/inicio-tempo.mp3" type="audio/mpeg">';
			document.getElementById("div-inicio-tempo").innerHTML='<audio autoplay="autoplay">' + mp3Source1 + '</audio>';
			tocou_inicio = true;
		}*/

		var current_date1 = new Date().getTime();
		var segundos_f1 = (dt1 - current_date1) / 1000;
		var minutos1 = parseInt(segundos_f1 / 60);
		
		segundos_f1 = parseInt(segundos_f1 % 60);

		if(minutos1> 9){
			minuto_formatado = minutos1;
		}
		else {
			minuto_formatado = '0' + minutos1;
		}

		// o navegador bloqueia sons chamados automaticamente ***
		// se segundos_f1 for igual a 30, disparo um alarme
		//if (minutos1 == 0 && segundos_f1 == 30){
			// disparar alarme de 30 segundos restantes
			//audio_regressivo.play();
		//}

		if(segundos_f1 > 9){
			segundo_formatado = segundos_f1;
		}
		else {
			segundo_formatado = '0' + segundos_f1;
		}

		document.getElementById('div_relogio').innerHTML = minuto_formatado + ':' + segundo_formatado;

		if(minutos1 == 0 && segundos_f1 == 0){
			//console.log('zerou');
			clearInterval(interval);
			document.getElementById('div_relogio').style.color = "red";

			

			<%if(simulation){%>

				// console.log('Principal-passo: ' + passo);
				console.log('Terminou o tempo: ' + passo);

				if(passo == 'inicio-execucao' || passo == 'retro-iniciada'){
					direcionarMensagem('');
				}
			<%} else {%>

				if(tempo_adicional > 0){
					$("#alerta-animado").css("background-image", "url(/imagens/game/fundo-mensagem-tempo.png)");
					$("#alerta-animado").css("background-repeat", "no-repeat");
					$("#alerta-animado").css("background-position", "center");
					$("#alerta-animado").css("padding-top", "350px");
					$("#alerta-animado").css("position", "absolute");

					// jQuery('#main').css('opacity', '0');
					jQuery('#alerta-animado').css('height', '415px');
					jQuery('#alerta-animado').css('width', '1290px');

					$("#alerta-animado").animate({opacity: 1}, 1000, function() {

						var millisecondsToAnimate = 2000;
						var millisecondsToWait = 7000;

						setTimeout(function() {
							$("#alerta-animado").animate({ opacity: 0 }, 2000, function () {
								$(this).css('width', '0px');
							})
						}, millisecondsToWait);				
					});
				}

			<%}%>
			

			// dispara o som de fim do tempo
			//var mp3Source3 = '<source src="/audio/fim-tempo.mp3" type="audio/mpeg">';
			//document.getElementById("div-fim-tempo").innerHTML='<audio autoplay="autoplay">' + mp3Source3 + '</audio>';
		}


	}, tempo_adicional );

}




// inicio kanban


/* Events fired on the drag target */

document.addEventListener("dragstart", function(event) {
  // The dataTransfer.setData() method sets the data type and the value of the dragged data
  event.dataTransfer.setData("Text", event.target.id);
  
  // Output some text when starting to drag the p element
  //document.getElementById("demo").innerHTML = "Started to drag the p element.";
  
  // Change the opacity of the draggable element
  //event.target.style.opacity = "0.4";
});

// While dragging the p element, change the color of the output text
document.addEventListener("drag", function(event) {
//   document.getElementById("demo").style.color = "red";
//   document.getElementById("demo").innerHTML = "While dragging the p element";
});

// Output some text when finished dragging the p element and reset the opacity
document.addEventListener("dragend", function(event) {
//   document.getElementById("demo").innerHTML = "Finished dragging the p element.";
//   event.target.style.opacity = "1";
//   console.log(event.target.id);
//   console.log(event.path[1].id);


	var numero = event.target.id;
	var etapa = event.path[1].id;
	var x = event.clientX;
	var y = event.clientY;

	if(dia_corrente > 0){
		salvar_tarefa(numero, etapa);

		console.log('*** saveHistory: ' + etapa);
	}

	// console.log('Event X: ' + event.clientX);
	// console.log('Event Y: ' + event.clientY);

	var nome_div_atualizar = event.target.id;

	//console.log('div_atualizar: ' + event.target.id);

	App.socket.emit('receive_pos_kanban', {
		x: event.clientX,
		y: event.clientY,
		div_atualizar: nome_div_atualizar,
		div_destino: etapa,
		room: '<%=time%>'
	});

      

});

/* Events fired on the drop target */

// When the draggable p element enters the droptarget, change the DIVS's border style
document.addEventListener("dragenter", function(event) {
  if ( event.target.className == "droptarget" ) {
	// document.getElementById("demo").innerHTML = "When the draggable p element enters the droptarget";
    event.target.style.border = "5px dotted #0099cc";
  }
});

// By default, data/elements cannot be dropped in other elements. To allow a drop, we must prevent the default handling of the element
document.addEventListener("dragover", function(event) {
  event.preventDefault();
//   document.getElementById("demo").innerHTML = "dragover";
});

// When the draggable p element leaves the droptarget, reset the DIVS's border style
document.addEventListener("dragleave", function(event) {
  if ( event.target.className == "droptarget" ) {
	event.target.style.border = "";
	// document.getElementById("demo").innerHTML = "When the draggable p element leaves the droptarget";
  }
});

/* On drop - Prevent the browser default handling of the data (default is open as link on drop)
   Reset the color of the output text and DIV's border color
   Get the dragged data with the dataTransfer.getData() method
   The dragged data is the id of the dragged element ("drag1")
   Append the dragged element into the drop element
*/
document.addEventListener("drop", function(event) {
  event.preventDefault();
  if ( event.target.className == "droptarget" ) {
    //document.getElementById("demo").style.color = "";
    event.target.style.border = "";
    var data = event.dataTransfer.getData("Text");
    event.target.appendChild(document.getElementById(data));
  }
});

function saveAval(){

	var form = document.getElementById("smileys");
	var value = form.elements["smiley"].value;
	var comment = form.elements["comment"].value;

	$.ajax({
		url: "/game_control/save_aval",
		data: { 
				id_jogo: '<%=id_jogo%>', 
				avaliacao: value,
				comentarios: comment,
				email_jogador: '<%=email_jogador%>'
				},
		type: "POST",
		beforeSend: function() {
			//$("#" + formName).html(preloaderAzul);
		},
		success: function(response) {
			console.log('Resposta ajax:' + response);

			$( "div" ).remove( "#div-form-avaliacao" );

			const div = document.createElement('div');
			//div.className = 'row';
			div.innerHTML = "<div id='div-obrigado'><div class='container box cor_totais font'>Obrigado!</div><br>" 

			+"<div class='container'> "
			+"	<button class='button' type='button'  onClick='fecharModal()''>Fechar</button> "
			+"</div></div>";


			document.getElementById('div-avaliacoes').appendChild(div);


			// $("#" + formName).html(response);
		},
	});
}


function salvar_avaliacao(){

var avaliado1 = document.getElementById('_avaliacao_1').value;
var avaliado2 = document.getElementById('_avaliacao_2').value;
var avaliado3 = document.getElementById('_avaliacao_3').value;
var avaliado4 = document.getElementById('_avaliacao_4').value;
var avaliado5 = document.getElementById('_avaliacao_5').value;

if(avaliado1 == 0 || avaliado2 == 0 || avaliado3 == 0 || avaliado4 == 0 || avaliado5 == 0) {
	alert('Por favor distribua todas as estrelas!')
	return
}


$.ajax({
	url: "/avaliacao/salvar_avaliacao",
	data: { 
			avaliado1: avaliado1,
			avaliado2: avaliado2, 
			avaliado3: avaliado3, 
			avaliado4: avaliado4, 
			avaliado5: avaliado5
			},
	type: "POST",
	beforeSend: function() {
		//$("#" + formName).html(preloaderAzul);
	},
	success: function(response) {
		console.log('Resposta ajax:' + response);

		$( "div" ).remove( "#div-form-avaliacao" );

		const div = document.createElement('div');
		//div.className = 'row';
		div.innerHTML = "<div id='div-obrigado'><div class='container box cor_totais font'>"+response.message+"</div><br>" 

		+"<div class='container'> "
		+"<a href='#' onClick='fecharModal()'> "
			+"	<img src='/imagens/edicao/btn-fechar.png' width='180px' border='0' alt=''></a> "
		+"</div></div>";


		document.getElementById('div-avaliacoes').appendChild(div);


		// $("#" + formName).html(response);
	},
});
}



function salvar_tarefa(numero, etapa){


	$.ajax({
		url: "/quadro/atualizar_tarefa_quadro",
		data: { id_tarefa: numero, 
				etapa: etapa
				 },
		type: "POST",
		beforeSend: function() {
			//$("#" + formName).html(preloaderAzul);
		},
		success: function(response) {
			console.log('Resposta ajax:' + response);
			// $("#" + formName).html(response);
		},
	});
}

function saveHistoryKanban(target, target_value, source, source_value){
	
	var type = 'POST';

	var value_backlog = document.getElementById("div-backlog").innerHTML.replace("'","");
	var value_sprint_backlog = document.getElementById("div-sprint-backlog").innerHTML.replace("'","");
	var value_fazer = document.getElementById("div-fazer").innerHTML.replace("'","");
	var value_fazendo = document.getElementById("div-fazendo").innerHTML.replace("'","");
	var value_feito = document.getElementById("div-feito").innerHTML.replace("'","");

	$.ajax({
		url: "/game_control/save_history_kanban",
		crossDomain: true,
		//dataType: "json",
		type: type,
		timeout: 20000,
		//async: (async === undefined ? true : async),
		beforeSend: function() {
			//$("#" + formName).html(preloaderAzul);
		},
		retryMax: (type == "POST" ? 0 : 5),
		data: { room: '<%=time%>', 
				// target: target, 
				// target_value: target_value, 
				// source: source, 
				// source_value: source_value ,
				value_div_backlog: value_backlog, 
				value_div_sprint_backlog: value_sprint_backlog, 
				value_div_fazer: value_fazer, 
				value_div_fazendo: value_fazendo, 
				value_div_feito: value_feito
			},
	}).done(function(response, status, xhr) {
		console.log('Resposta insert ajax:' + response);
	}).fail(function(xhr, textStatus, error) {
		console.log("Falhou: " + error);
	});
}



function carregarHistorias(){

	$.ajax({
		url: "/game/carregar_historias",
		data: { id_jogo: '<%=id_jogo%>', room: '<%=codigo_jogo%>-<%=time_email%>' },
		type: "POST",
		beforeSend: function() {
			//$("#" + formName).html(preloaderAzul);
		},
		success: function(response) {
			// console.log('Resposta ajax carregar kanban:' + response);

			for(var i=0; i < response.length ; i++) {
				

				div = document.createElement('div');
				div.className = 'row';
				// div.innerHTML = "<div class='postit font-cards' draggable='true' id='historia-"+response[i].numero+"'><b>" 
				div.innerHTML = "<div class='postit font-cards' id='historia-"+response[i].numero+"'><b>" 
						+ "<a href='#h"+response[i].numero+"'> "
						+ response[i].numero+" - "+response[i].titulo+"</b></a><br> "
						+ "Qtde. Peças: "+response[i].quantidade_pecas+"<br>Tamanho: "+response[i].tamanho+"<br> "
						+ "ROI diário: R$ "+response[i].roi_diario+",00 "
					+ "</div>";

					// console.log('Historia:' + response[i].numero);
			
				if(response[i].etapa !== ''){
					document.getElementById(response[i].etapa).appendChild(div);
				}
				else {
					document.getElementById("div-backlog").appendChild(div);
				}
				
				
			}
		},
	});
}

function chamarCarregarTarefas(){
	

	var millisecondsToWait = 3000;

	setTimeout(function() {
		carregarTarefasQuadro();
	}, millisecondsToWait);

	
}

function carregarHistoriasKanban(){

$.ajax({
	url: "/game/carregar_historias_kanban",
	data: { room: '<%=codigo_jogo%>-<%=time_email%>', jogo_fisico: '<%=jogo_fisico%>' },
	type: "POST",
	beforeSend: function() {
		//$("#" + formName).html(preloaderAzul);
	},
	success: function(response) {
		//console.log('Resposta ajax carregar:' + response);

		var conteudo = '';

		// do zero
		if(response.inicial == 'true'){
			var qtde_historias = response.resultado.length;

			if(typeof acesso !== 'undefined' && acesso == 'pode-crer'){
				qtde_historias = 5;
			}

			for(var i=0; i < qtde_historias; i++) {

				conteudo = conteudo + ("<div class='efeito_pergaminho font-cards' id='historia-"+response.resultado[i].numero+"'>" 
					+ "<b><a href='#h"+response.resultado[i].numero+"'> "+ response.resultado[i].numero+" - "+response.resultado[i].titulo
					+	"</a></b><br> Qtde. Peças: "+response.resultado[i].quantidade_pecas+"<br>Tamanho: "+response.resultado[i].tamanho
					+	"<br> ROI diário: R$ "+response.resultado[i].roi_diario+",00"
					+ "</div>");

				// console.log('Historia:' + response.resultado[i].numero);

				// <%if(simulation){%>
				// 	mapRoiHistorias.set("historia-" + response.resultado[i].numero, response.resultado[i].roi_diario);
				// <%}%>
			}

			document.getElementById("div-backlog").innerHTML = conteudo;

			// console.log('Vai carregar o map mapRoiHistorias');

			
		}
		else {
			//for(var i=0; i < response.resultado.length; i++) {
			//	document.getElementById(response.resultado[i].etapa).innerHTML = response.resultado[i].valor;
			//}

			// desenho cada carta que tenha etapa preenchido ja movida do backlog. O que estiver 
			// em branco, vou manter no backlog
			var conteudo_backlog = '';
			var conteudo_sprint_backlog = '';
			var conteudo_fazer = '';
			var conteudo_fazendo = '';
			var conteudo_feito = '';

			var div_cartao = '';

			//console.log('Vai iniciar o carregamento');
			//console.log('Qtde registros para carregar: ' + response.resultado.length);

			for(var i=0; i < response.resultado.length; i++) {
				div_cartao = "<div class='efeito_pergaminho font-cards' id='historia-"+response.resultado[i].numero+"'>" 
					+ "<b><a href='#h"+response.resultado[i].numero+"'> "+ response.resultado[i].numero+" - "+response.resultado[i].titulo 
					+	"</a></b><br> Qtde. Peças: "+response.resultado[i].quantidade_pecas+"<br>Tamanho: "+response.resultado[i].tamanho
					+	"<br> ROI diário: R$ "+response.resultado[i].roi_diario+",00"
					+ "</div>";

					//console.log('Etapa: ' + response.resultado[i].etapa + ' da carta: ' + response.resultado[i].numero  + ' - conteudo: ' + div_cartao);

				if(typeof response.resultado[i].etapa !== 'undefined' && response.resultado[i].etapa !== 'null'){
					if(typeof response.resultado[i].etapa !== 'undefined' && response.resultado[i].etapa == 'div-sprint-backlog'){
						conteudo_sprint_backlog = conteudo_sprint_backlog + div_cartao;
					} else if(typeof response.resultado[i].etapa !== 'undefined' && response.resultado[i].etapa == 'div-fazer'){
						conteudo_fazer = conteudo_fazer + div_cartao;
					} else if(typeof response.resultado[i].etapa !== 'undefined' && response.resultado[i].etapa == 'div-fazendo'){
						conteudo_fazendo = conteudo_fazendo + div_cartao;
					} else if(typeof response.resultado[i].etapa !== 'undefined' && response.resultado[i].etapa == 'div-feito'){
						conteudo_feito = conteudo_feito + div_cartao;
					} else {
						conteudo_backlog = conteudo_backlog + div_cartao;
					}
				} else {
					conteudo_backlog = conteudo_backlog + div_cartao;
				}
				
			}

			//console.log('Div Backlog: ' + conteudo_backlog);

			document.getElementById("div-backlog").innerHTML = conteudo_backlog;
			document.getElementById("div-sprint-backlog").innerHTML = conteudo_sprint_backlog;
			document.getElementById("div-fazer").innerHTML = conteudo_fazer;
			document.getElementById("div-fazendo").innerHTML = conteudo_fazendo;
			document.getElementById("div-feito").innerHTML = conteudo_feito;
			
		}
		
	},
});
}


// fim kanban


</script>

<script>

	// Get the modal
	var modal = document.getElementById("modal_times");
	
	// Get the <span> element that closes the modal
	var span = document.getElementsByClassName("close")[6];

	function abrirModal(){
		modal.style.display = "block";
	}
	
	// When the user clicks on <span> (x), close the modal
	span.onclick = function() {
		modal.style.display = "none";
	}




	
	var span_guerreiro = document.getElementsByClassName("close")[5];

	span_guerreiro.onclick = function() {
		modal_guerreiro.style.display = "none";
	}

	


	// When the user clicks anywhere outside of the modal, close it
	window.onclick = function(event) {
		if (event.target == modal) {
			modal.style.display = "none";
		}
		else if (event.target == modal_aval) {
			modal_aval.style.display = "none";
		}
		else if (event.target == modal_rank) {
			modal_rank.style.display = "none";
		}
		else if (event.target == modal_sm) {
			modal_sm.style.display = "none";
		}
		else if (event.target == modal_po) {
			modal_po.style.display = "none";
		}
		else if (event.target == modal_guerreiro) {
			modal_guerreiro.style.display = "none";
		}
		else if (event.target == modal_tarefa) {
			modal_tarefa.style.display = "none";
		}
		else if (event.target == modal_pena) {
			modal_pena.style.display = "none";
		}
	}

	function fecharModal(){
		modal_aval.style.display = "none";
	}


	// avaliacoes
	var modal_aval = document.getElementById("modal_aval");

	var span_aval = document.getElementsByClassName("close")[1];

	span_aval.onclick = function() {
		modal_aval.style.display = "none";
	}

	function abrirModalAval(){

		var texto_membros = '';


		<%if(simulation){%>				
			abrirModalMensagem('Esta funcionalidade não será utilizada na Simulação.');
			return false;
		<%}%>

		modal_aval.style.display = "block";

		
       $.ajax({
                url: "/users/carregar_membros_time",
           data: { 
                   },
           type: "POST",
           beforeSend: function() {
               //$("#" + formName).html(preloaderAzul);
           },
           success: function(response) {
                if(typeof response.data_membros_time !== 'undefined' && response.data_membros_time !== null){
                    for(var z=0; z < response.data_membros_time.length; z++) { 
                    	// alert(" <option value='"+response.data_membros_time[z].id+"'>"+response.data_membros_time[z].nome+ " </option>");          
    					
						if(typeof response.usuario_logado !== 'undefined' && response.usuario_logado !== null && 
						response.usuario_logado !== response.data_membros_time[z].id){
							texto_membros = texto_membros + " <option value='"+response.data_membros_time[z].id+"'>"+response.data_membros_time[z].nome+ " </option>"; 
						}
						
					}
			    }
            
           },
       });

		$( "div" ).remove( "#div-obrigado" );
		$( "div" ).remove( "#div-form-avaliacao" );

		
		
		//div.className = 'row';

		var millisecondsToWait = 500;
	
		setTimeout(function() {

			const div = document.createElement('div');
			
			var texto2 = "<div class='container' id='div-form-avaliacao'>"
			+"	<p class='font titulos-mensagens'>Avalie os membros do seu time!</p>"
			+"	<form id='smileys'>"

				+ " <div class='form-group'>"
					+ "				<div class='form-group mt-3 mt-sm-0'>"
					+ " <table><tr><td>"
					+ "				<span >"
					+ "					<img src='/imagens/edicao/estrela.png' alt='' height='24'/>"
					+ "				</span></td><td>"
					+ "					<label> </label>"
					+ "					<select data-plugin='customselect' id='_avaliacao_1' class='form-control' data-placeholder='Selecione um time'>"
					+ "						<option value='0'>Nenhum</option>";
											texto2 = texto2 + texto_membros;
											texto2 = texto2 + "		</select></td></tr></table>"	
					+ "				</div>"
					+ "			</div>"

					+ " <div class='form-group'>"
					+ "				<div class='form-group mt-3 mt-sm-0'>"
					+ " <table><tr><td>"
					+ "				<span class='logo-lg'>"
					+ "					<img src='/imagens/edicao/estrela.png' alt='' height='24' />"
					+ "				</span></td><td>"
					+ "					<label> </label>"
					+ "					<select data-plugin='customselect' id='_avaliacao_2' class='form-control' data-placeholder='Selecione um time'>"
					+ "						<option value='0'>Nenhum</option>";
											texto2 = texto2 + texto_membros;
											texto2 = texto2 + "		</select></td></tr></table>"	
					+ "				</div>"
					+ "			</div>"

					+ " <div class='form-group'>"
					+ "				<div class='form-group mt-3 mt-sm-0'>"
					+ " <table><tr><td>"
					+ "				<span class='logo-lg'>"
					+ "					<img src='/imagens/edicao/estrela.png' alt='' height='24' />"
					+ "				</span></td><td>"
					+ "					<label> </label>"
					+ "					<select data-plugin='customselect' id='_avaliacao_3' class='form-control' data-placeholder='Selecione um time'>"
					+ "						<option value='0'>Nenhum</option>";
											texto2 = texto2 + texto_membros;
											texto2 = texto2 + "		</select></td></tr></table>"	
					+ "				</div>"
					+ "			</div>"
					
					+ " <div class='form-group'>"
					+ "				<div class='form-group mt-3 mt-sm-0'>"
					+ " <table><tr><td>"
					+ "				<span class='logo-lg'>"
					+ "					<img src='/imagens/edicao/estrela.png' alt='' height='24' />"
					+ "				</span></td><td>"
					+ "					<label> </label>"
					+ "					<select data-plugin='customselect' id='_avaliacao_4' class='form-control' data-placeholder='Selecione um time'>"
					+ "						<option value='0'>Nenhum</option>";
											texto2 = texto2 + texto_membros;
											texto2 = texto2 + "		</select></td></tr></table>"	
					+ "				</div>"
					+ "			</div>"


					+ " <div class='form-group'>"
					+ "				<div class='form-group mt-3 mt-sm-0'>"
					+ " <table><tr><td>"
					+ "				<span class='logo-lg'>"
					+ "					<img src='/imagens/edicao/estrela.png' alt='' height='24' />"
					+ "				</span></td><td>"
					+ "					<label> </label>"
					+ "					<select data-plugin='customselect' id='_avaliacao_5' class='form-control' data-placeholder='Selecione um time'>"
					+ "						<option value='0'>Nenhum</option>";
											texto2 = texto2 + texto_membros;
											texto2 = texto2 + "		</select></td></tr></table>"	
					+ "				</div>"
					+ "			</div>"

			+"		<br>"
			+"		<div class='container'>"

			+"<a href='#' onClick='salvar_avaliacao()'> "
			+"	<img src='/imagens/edicao/btn-salvar.png' width='180px' border='0' alt=''></a> "
			+"		</div>"
			+"	</form>"
			+"</div>";

			//alert(texto_membros)

			div.innerHTML = texto2;

			document.getElementById('div-avaliacoes').appendChild(div);

		}, millisecondsToWait);

		

	}
	
	span_aval.onclick = function() {
		modal_aval.style.display = "none";
	}

	// Ranking
	var modal_rank = document.getElementById("modal_rank");

	var span_rank = document.getElementsByClassName("close")[2];

	span_rank.onclick = function() {
		modal_rank.style.display = "none";
	}

	var span_sabio = document.getElementsByClassName("close")[3];

	span_sabio.onclick = function() {
		modal_sm.style.display = "none";
	}

	function abrirModalRank(){

		var texto_membros = '';


		<%if(simulation){%>				
			abrirModalMensagem('Esta funcionalidade não será utilizada na Simulação.');
			return false;
		<%}%>

		modal_rank.style.display = "block";

		
       $.ajax({
                url: "/avaliacao/carregar_ranking",
           data: { 
                   },
           type: "POST",
           beforeSend: function() {
               //$("#" + formName).html(preloaderAzul);
           },
           success: function(response) {
                if(typeof response.data_ranking !== 'undefined' && response.data_ranking !== null){
					var img_nivel = 'bronze';
                    for(var z=0; z < response.data_ranking.length; z++) { 
                    	// alert(" <option value='"+response.data_membros_time[z].id+"'>"+response.data_membros_time[z].nome+ " </option>");          
						texto_membros = texto_membros 
						+ "<label>"+(z+1)+". "+response.data_ranking[z].nome_avaliado+" -->> </label>"
					+ "				<span class='logo-lg'>"
					+ "					<img src='/imagens/edicao/estrela.png' alt='' height='20' />"
					+ "				</span>"
					+ " <label> "+response.data_ranking[z].total_estrelas+" --> Nível </label>";

					if(response.data_ranking[z].total_estrelas > 0 && response.data_ranking[z].total_estrelas < 31){
						img_nivel = 'bronze';
					} else if(response.data_ranking[z].total_estrelas > 30 && response.data_ranking[z].total_estrelas < 81){
						img_nivel = 'ferro';
					} else if(response.data_ranking[z].total_estrelas > 80 && response.data_ranking[z].total_estrelas < 151){
						img_nivel = 'ouro';
					} else if(response.data_ranking[z].total_estrelas > 150){
						img_nivel = 'diamante';
					}


					texto_membros = texto_membros + "				<span class='logo-lg'>"
					+ "					<img src='/imagens/edicao/"+img_nivel+".png' alt='' height='24' />"
					+ "				</span><br>";

					}
			    }
            
           },
       });

		$( "div" ).remove( "#div-obrigado" );
		$( "div" ).remove( "#div-form-rank" );

		
		
		//div.className = 'row';

		var millisecondsToWait = 300;
	
		setTimeout(function() {

			const div = document.createElement('div');
			
			var texto2 = "<div class='container font-modais' id='div-form-rank'>"
			+"	</br></br><p class='font titulos-mensagens-modais' style='padding-top: 40px'>Lista dos Top jogadores do Time</p>"
			+"	<form id='smileys'>"

				+ " <div class='form-group'>"
					+ "				<div class='form-group mt-3 mt-sm-0'>"

											texto2 = texto2 + texto_membros;
					+ "				</div>"
					+ "			</div>"

			+"		<br><br>"
			+"		<div class='container'>"
			+"<a href='#' onClick='salvar_avaliacao()'> "
			+"	<img src='/imagens/edicao/btn-salvar.png' width='180px' border='0' alt=''></a> "
			+"		</div>"
			+"	</form>"
			+"</div>";

			//alert(texto_membros)

			div.innerHTML = texto2;

			document.getElementById('div-rank').appendChild(div);

		}, millisecondsToWait);
	}
	
	

	// penalidades
	var modal_pena = document.getElementById("modal_pena");

	// var span_pena = document.getElementsByClassName("close")[1];

	function abrirModalMensagem(msg){
		

		modal_pena.style.display = "block";

		$( "div" ).remove( "#div-penal" );

		const div = document.createElement('div');
		div.innerHTML = "<div id='div-penal'><div class='container box font'><span class='texto-alerta'>"+msg+"</span></div><br>" 

		+"<div class='container'> "
		+"	<button class='button' type='button'  onClick='fecharModalPena()''>Fechar</button> "
		+"</div></div>";


		document.getElementById('div-penalidades').appendChild(div);

	}
	
	// span_pena.onclick = function() {
	// 	modal_pena.style.display = "none";
	// }

	function fecharModalPena(){
		modal_pena.style.display = "none";
	}

		
	// instrucoes planning
	var modal_planning = document.getElementById("modal_planning");

	// var span_pena = document.getElementsByClassName("close")[1];

	function abrirModalPlanning(){
		

		modal_planning.style.display = "block";

		$( "div" ).remove( "#div-planning" );

		fecharModalObjetivo();

		const div = document.createElement('div');
		div.innerHTML = "<div id='div-planning'><div class='container box font'>"
			+"<span class='texto-alerta titulos'>Sprint Planning</span></br></br>"
			+"<span class='texto-mensagem-planning'>O PO prioriza as historias e busca gerar o maior ROI.</br>"
				+"O Time informa ao PO quantas historias conseguem entregar até o fim da sprint, considerando que existe um limite de peças a montar para cada um dos 4 dias úteis da Sprint.</br>"
				+"O PO arrasta as historias para a coluna \"Sprint Backlog\" e informa qual a \"meta da Sprint\" para o facilitador do jogo.</span></div><br>" 

		+"<div class='container'> "
		+"	<button class='button' type='button'  onClick='fecharModalPlanning()''>Fechar</button> "
		+"</div></div>";


		document.getElementById('div-instr-planning').appendChild(div);

	}
	
	function fecharModalPlanning(){
		modal_planning.style.display = "none";

		<%if(simulation){%>

			$(".max").click();

			document.getElementsByClassName("msger-input")[0].focus();

		<%}%>
	}

	// instrucoes daily
	var modal_daily = document.getElementById("modal_daily");

	function abrirModalDaily(){
		

		modal_daily.style.display = "block";

		$( "div" ).remove( "#div-daily" );
	
		fecharModalObjetivo();
		fecharModalPlanning();

		const div = document.createElement('div');
		div.innerHTML = "<div id='div-daily'><div class='container box font'>"
			+"<span class='texto-alerta-daily titulos'>Reunião diária</span><br><br>"
			+"<span class='texto-mensagem-daily'>Existe um limite de peças para montar no dia.<br>"
				+"O Time deve decidir quais peças devem montar neste dia para alcançar a meta da Sprint e discutir sobre os problemas que podem os impedir.</span></div><br>" 

		+"<div class='container'> "
		+"	<button class='button' type='button'  onClick='fecharModalDaily()''>Fechar</button> "
		+"</div></div>";


		document.getElementById('div-instr-daily').appendChild(div);

	}
	
	function fecharModalDaily(){
		modal_daily.style.display = "none";

		<%if(simulation){%>

			document.getElementsByClassName("msger-input")[0].focus();

		<%}%>
	}

// instrucoes retro
var modal_retro = document.getElementById("modal_retro");

// var span_pena = document.getElementsByClassName("close")[1];

function abrirModalRetro(){
	
	modal_retro.style.display = "block";

	$( "div" ).remove( "#div-retro" );

	fecharModalObjetivo();

	if(dia_corrente < 5){
		fecharModalDaily();
	}

	const div = document.createElement('div');
	div.innerHTML = "<div id='div-retro'><div class='container box font'>"
		+"<span class='texto-alerta-retro titulos'>Sprint Retrospective</span></br></br>"
		+"<span class='texto-mensagem-retro'>PO, SM e Time devem realizar a melhoria contínua para que a próxima Sprint seja melhor do que a que acabou de terminar.</br>"
		+"Devem informar os pontos positivos, pontos de melhorias e devem criar ao menos um plano de ação.<br> "
		+"Clique no botão \"Retro\" para ir para a tela de Retrospectiva.</span></div></br>"

	+"<div class='container'> "
	+"	<button class='button' type='button'  onClick='fecharModalRetro()''>Fechar</button> "
	+"</div></div>";


	document.getElementById('div-instr-retro').appendChild(div);

}

function fecharModalRetro(){
	modal_retro.style.display = "none";
}




function validarHistoria(id_historia) {
	alert(id_historia);

	return;

	// verificar se estah na coluna div-feito. Caso nao esteja, nao deve seguir

	$.ajax({
		url: "/game_control/validate_history",
		data: { 
				dia: dia_selecionado, 
				id_historia: id_historia, 
				room: '<%=codigo_jogo%>-<%=time_email%>' },
		type: "POST",
		beforeSend: function() {
			//$("#" + formName).html(preloaderAzul);
		},
		success: function(response) {
			console.log('Resposta ajax:' + response);
			// $("#" + formName).html(response);
		},
	});

	
	// agora chamo o ajax passando o id_jogo, id_historia e o dia selecionado no combo daquela historia

	// vou na tabela 'historias_jogo' e atualizo a data fim com o dia que acabo de enviar e marco a coluna 'validada' = 's'

	// o ROI somente deve ser contabilizado para historias com a coluna 'validada' = 's'

	// somente deve permitir validar historias que estejam na coluna 'Pronto' no Kanban

	// precisa ver se consigo recarregar o dia que a historia foi entregue apos recarregar a tela
}


function post(path, params, method='post') {

	<%if(simulation){%>				
		if(params.hasOwnProperty('nova_janela') && params['nova_janela'] == 'true'){
			abrirModalMensagem('Esta funcionalidade não será utilizada na Simulação.');
			return false;
		}
	<%}%>

	const form = document.createElement('form');
	form.method = method;
	form.action = path;

	console.log(params['nova_janela']);

	

	if(params.hasOwnProperty('nova_janela') && params['nova_janela'] == 'true'){
		form.target = '_blank';
	}


	for (const key in params) {
	if (params.hasOwnProperty(key) && params[key] !== 'nova_janela') {
		const hiddenField = document.createElement('input');
		hiddenField.type = 'hidden';
		hiddenField.name = key;
		hiddenField.value = params[key];

		form.appendChild(hiddenField);
		}
	}

	document.body.appendChild(form);
	form.submit();
}

// Very simple JS for updating the text when a radio button is clicked
const INPUTS = document.querySelectorAll('#smileys input');
const updateValue = e => document.querySelector('#result').innerHTML = e.target.value;

INPUTS.forEach(el => el.addEventListener('click', e => updateValue(e)));


function carregarTarefasQuadro(){

//alert('Caregando quadro tarefas:' + <%=data_tarefas.length %> );
//return;

var conteudo = '';

// desenho cada carta que tenha etapa preenchido ja movida do backlog. O que estiver 
// em branco, vou manter no backlog
var conteudo_backlog = '';
var conteudo_sprint_backlog = '';
var conteudo_fazer = '';
var conteudo_fazendo = '';
var conteudo_feito = '';

var div_cartao = '';

//console.log('Vai iniciar o carregamento');
//console.log('Qtde registros para carregar: ' + response.resultado.length);

<% for(var i=0; i < data_tarefas.length; i++) { %>
	div_cartao = "<div class='efeito_pergaminho font-cards' id='historia-<%= data_tarefas[i].id %>'>" 
		+ "<b><a href='#' data-toggle='modal' data-target='#myModal-tarefa' onClick='carregar_tarefa(<%=data_tarefas[i].id%>)' onmouseover='window.status=\"Editar Tarefa\"; return true;'>"
		+ "<%=data_tarefas[i].id%> - <%=data_tarefas[i].nome%></b></a> "
		+ "<br> Dificuldade: <%=data_tarefas[i].esforco%> pontos"
		+ "<br> Responsável: <%=data_tarefas[i].nome_responsavel%>"
		+ "</div>";

	//console.log('Etapa: ' + response.resultado[i].etapa + ' da carta: ' + response.resultado[i].numero  + ' - conteudo: ' + div_cartao);

	<% if(typeof data_tarefas[i].etapa !== 'undefined' && data_tarefas[i].etapa !== 'null'){ 
		if(typeof data_tarefas[i].etapa !== 'undefined' && data_tarefas[i].etapa == 'div-sprint-backlog'){ %>
			conteudo_sprint_backlog = conteudo_sprint_backlog + div_cartao;
		<% } else if(typeof data_tarefas[i].etapa !== 'undefined' && data_tarefas[i].etapa == 'div-fazer'){ %>
			conteudo_fazer = conteudo_fazer + div_cartao;
		<% } else if(typeof data_tarefas[i].etapa !== 'undefined' && data_tarefas[i].etapa == 'div-fazendo'){ %>
			conteudo_fazendo = conteudo_fazendo + div_cartao;
		<% } else if(typeof data_tarefas[i].etapa !== 'undefined' && data_tarefas[i].etapa == 'div-feito'){ %>
			conteudo_feito = conteudo_feito + div_cartao;
		<% } else { %>
			conteudo_backlog = conteudo_backlog + div_cartao;
		<% }
	} else { %>
		conteudo_backlog = conteudo_backlog + div_cartao;
	<% }
	
} %>

//console.log('Div Backlog: ' + conteudo_backlog);

document.getElementById("div-backlog").innerHTML = conteudo_backlog;
document.getElementById("div-sprint-backlog").innerHTML = conteudo_sprint_backlog;
document.getElementById("div-fazer").innerHTML = conteudo_fazer;
document.getElementById("div-fazendo").innerHTML = conteudo_fazendo;
document.getElementById("div-feito").innerHTML = conteudo_feito;


}

var dragAndDrop = {
    
    init: function () {
        this.dragula();
        this.drake();
    },

    drake: function () {
		//this.dragula.on('drop', this.dropped.bind(this));
		
		this.dragula.on('drop', function (el, target, source) {

			// preciso do id para tratar e gravar os status das historias
			var numero = el.id;
			
			// devo enviar a coluna destino para gravar o novo status do item movido
			var etapa = target.id;

			<%if(simulation){%>				
				controleKanban(numero, source.id, target.id);
			<%} else {%>

				// if(dia_corrente > 0){
					salvar_tarefa(numero, etapa);

					//saveHistoryKanban(target.id, target.innerHTML, source.id, source.innerHTML);
				// }

				// console.log('destino: ' + target.id);
				// console.log('atual: ' + source.id);

				App.socket.emit('receive_pos_kanban_new', {
					numero: numero,
					target: target.id,
					target_value: target.innerHTML,
					source: source.id,
					source_value: source.innerHTML,
					room: '<%=time%>'
				});

			<%}%>
			
		});

		
    },

    dragula: function () {
		this.dragula = dragula( [ document.querySelector('#div-backlog'), document.querySelector('#div-sprint-backlog'), 
		document.querySelector('#div-fazer'), document.querySelector('#div-fazendo'), document.querySelector('#div-feito') ],
        {
            moves: this.canMove.bind(this),
            copy: false,
        });
    },
    
    canMove: function () {
		<%if(simulation){%>
			if(dia_corrente == 0){
				dia_corrente = 1;
			}
		<%}%>

		if(dia_corrente > 0){
			return true;
		} else {
			abrirModalMensagem('O dia corrente precisa ser maior que 0. Por favor verifique com o Facilitador e pressione a tecla F5.');
		}
    },
    
    dropped: function (el) {	
		//alert(el.innerHTML);
    }

};

dragAndDrop.init();



//inicio

$(window).resize(function() { 
	var browserZoomLevel = Math.round(window.devicePixelRatio * 100);

	if(browserZoomLevel < 80){
		alert('O zoom abaixo de 80% vai prejudicar sua experiencia no jogo.');
	}
});

//fim



<%if(simulation){%>

document.addEventListener('keydown', function(e) {
    if(e.key == "Enter"){
	  //document.getElementById("btnEnviar").click();
	  direcionar();
	}
});
		
function direcionar(){

	var mensagem = get(".msger-input").value;

	if(mensagem !== ''){
		direcionarMensagem(mensagem);
	}
}

<%}%>


// The function actually applying the offset
function offsetAnchor() {
  if (location.hash.length !== 0) {
    window.scrollTo(window.scrollX, window.scrollY - 92);
  }
}

// Captures click events of all <a> elements with href starting with #
$(document).on('click', "a[href^='#h']", function(event) {
  // Click events are captured before hashchanges. Timeout
  // causes offsetAnchor to be called after the page jump.
  window.setTimeout(function() {
    offsetAnchor();
  }, 0);
});

// Set the offset when entering page with hash present in the url
window.setTimeout(offsetAnchor, 0);



// carregar detalhe da tarefa
// avaliacoes
var modal_tarefa = document.getElementById("modal_tarefa");

var span_tarefa = document.getElementsByClassName("close")[0];

span_tarefa.onclick = function() {
	document.getElementById("modal_tarefa").style.display = "none";
}

function carregar_tarefa(id){

//  alert('ID campanha: ' + id);
//  return;
modal_tarefa.style.display = "block";

   if (id == 0){
       var texto_membros = '';
       $.ajax({
                url: "/users/carregar_membros_time",
           data: { 
                   },
           type: "POST",
           beforeSend: function() {
               //$("#" + formName).html(preloaderAzul);
           },
           success: function(response) {
                if(typeof response.data_membros_time !== 'undefined' && response.data_membros_time !== null){
                    for(var z=0; z < response.data_membros_time.length; z++) { 
                                                //alert(response.data_times[z].nome);          
    texto_membros = texto_membros + " <option value='"+response.data_membros_time[z].id+"'>"+response.data_membros_time[z].nome+ " </option>"; 
						}
			    }
            
           },
       });


	   var millisecondsToWait = 1000;
	
		setTimeout(function() {
			
				// inicio
			//       alert(id);
			$( "div" ).remove( "#div-form-nova-tarefa" );
				$( "div" ).remove( "#div-form-edicao-tarefa" );

				const div_nova = document.createElement('div');
				// alert(response.data[0].nome)

					var texto2 = "<div class='container' id='div-form-nova-tarefa'>"
						+"	<p class='font titulos-mensagens'>Detalhe da tarefa</p>"
					//Não sei se será utilizado, separar depois adequadamente|| Ramon. Minha sugestão é usar as mesmas tabelas do phpmyadmin dentro de tarefas
				+ "	<div class='card-body'>"
				+ ""
				+ "		<form>"
				+ "			<div class='form-group'>"
				+ "				<label for=''>Nome</label>"
				+ "				<input type='hidden' id='id-tarefa' value='"+id+"'>"
				+ "			    <input class='form-control' id='_nome_tarefa' aria-describedby='emailHelp' placeholder='Informe o nome'> "
				+ "			</div>"
				+ "			<div class='form-group'>"
				+ "				<label for=''>Descrição</label>"
				+ "			    <textarea type='textarea' class='form-control' id='_descricao_tarefa' aria-describedby='emailHelp' placeholder='Informe a descricao' rows='5'></textarea> "
				+ "			</div>"
				+ " <div class='form-group'>"
							+ "				<div class='form-group mt-3 mt-sm-0'>"
							+ "					<label>Dificuldade</label>"
							+ "         			<select data-plugin='customselect' id='_esforco' class='form-control' data-placeholder='Selecione a dificuldade'>"
							+ "						    <option value='0'>Nenhum</option>"
							+ "						    <option value='1'>1 ponto</option>"
							+ "						    <option value='2'>2 pontos</option>"
							+ "						    <option value='3'>3 pontos</option>"
							+ "						    <option value='5'>5 pontos</option>"
							+ "						    <option value='8'>8 pontos</option>"
							+ "						    <option value='13'>13 pontos</option>"
							+ "						    <option value='21'>21 pontos</option>"
							+ "	                    </select>"
							+ "				</div>"
							+ "			</div>"

							+ " <div class='form-group'>"
							+ "				<div class='form-group mt-3 mt-sm-0'>"
							+ "					<label>Responsável</label>"

							+ "					<select data-plugin='customselect' id='_responsavel' class='form-control' data-placeholder='Selecione um time'>"
							+ "						<option value='0'>Nenhum</option>";
							
								texto2 = texto2 + texto_membros;
													texto2 = texto2 + "		</select>"
													
							+ "				</div>"
							+ "			</div>"


				+ "		</form>"
				+"		<br><br>"
				+"		<div class='container'>"
				+"<a href='#' onClick='salvar_tarefa_edicao()'> "
			+"	<img src='/imagens/edicao/btn-salvar.png' width='180px' border='0' alt=''></a> "
				+"		</div>"

				+ "	</div> <!-- end card-body-->"
				+ "</div> <!-- end card-->";

				div_nova.innerHTML = texto2;

				console.log(texto2);

				document.getElementById('div-tarefas').appendChild(div_nova);
			// fim

		}, millisecondsToWait);


 

   } else {

       $.ajax({
                url: "/tarefa/carregar_detalhe_tarefa",
           data: { 
                   id_tarefa: id
                   },
           type: "POST",
           beforeSend: function() {
               //$("#" + formName).html(preloaderAzul);
           },
           success: function(response) {
            //alert(response.data_membros_time.length)
               $( "div" ).remove( "#div-form-edicao-tarefa" );
               $( "div" ).remove( "#div-form-nova-tarefa" );

               const div = document.createElement('div');
            //alert(response.data_tarefa[0].nome)

               var texto2 = "<div class='container' id='div-form-edicao-tarefa'>"
				+"	<p class='font titulos-mensagens'>Detalhe da tarefa</p>"
               + "	<div class='card-body'>"
               + ""
               + "		<form>"
               + "			<div class='form-group'>"
               + "				<label for=''>Nome</label>"
               + "             <input type='hidden' id='id-tarefa' value='"+id+"'>"
               + "				<input type='text' class='form-control' id='_nome_tarefa' aria-describedby='emailHelp' placeholder='Informe o objetivo' "
                               if(typeof response.data_tarefa[0].nome !== 'undefined' && response.data_tarefa[0].nome !== null){
                                   texto2 = texto2 + " value='"+response.data_tarefa[0].nome+"'";
                               }
                               texto2 = texto2 +" >"
               + "			</div>"
               + "			<div class='form-group'>"
                + "				<label for=''>Descrição</label>"
               + "				<textarea class='form-control' id='_descricao_tarefa' aria-describedby='emailHelp' placeholder='Informe a descrição' rows='5'> "
                               if(typeof response.data_tarefa[0].descricao !== 'undefined' && response.data_tarefa[0].descricao !== null){
                                   texto2 = texto2 +response.data_tarefa[0].descricao;
                               }
                               texto2 = texto2 +" </textarea>" 
               + "			</div>"

               + " <div class='form-group'>"
                + "				<div class='form-group mt-3 mt-sm-0'>"
                + "					<label>Dificuldade</label>"
                + "         			<select data-plugin='customselect' id='_esforco' class='form-control' data-placeholder='Selecione a dificuldade'>"
                + "						    <option value='0'>Nenhum</option>"
                + "						    <option value='1'>1 ponto</option>"
                + "						    <option value='2'>2 pontos</option>"
                + "						    <option value='3'>3 pontos</option>"
                + "						    <option value='5'>5 pontos</option>"
                + "						    <option value='8'>8 pontos</option>"
                + "						    <option value='13'>13 pontos</option>"
                + "						    <option value='21'>21 pontos</option>"
                + "	                   </select>"
                + "             </div>"
                + "			</div>"

                + " <div class='form-group'>"
                + "				<div class='form-group mt-3 mt-sm-0'>"
                + "					<label>Responsável</label>"

                + "					<select data-plugin='customselect' id='_responsavel' class='form-control' data-placeholder='Selecione um time'>"
                + "						<option value='0'>Nenhum</option>";
				

										if(typeof response.data_membros_time !== 'undefined' && response.data_tarefa !== null){
                                            for(var z=0; z < response.data_membros_time.length; z++) { 
                                                //alert(response.data_times[z].nome);
                                                
												if(typeof response.data_tarefa[0].responsavel !== 'undefined' && response.data_tarefa[0].responsavel !== null && response.data_tarefa[0].responsavel == response.data_membros_time[z].id){
    texto2 = texto2 + "								<option value='"+response.data_membros_time[z].id+"' selected=true>"+response.data_membros_time[z].nome+" </option>"; 
												} else {                    
    texto2 = texto2 + "								<option value='"+response.data_membros_time[z].id+"'>"+response.data_membros_time[z].nome+ " </option>"; 
                                                }
											}
										}
                                        texto2 = texto2 + "		</select>"
										
                + "				</div>"
                + "			</div>"



                + "			<div class='form-group'>"
               + "				<label for='dataInicio'>Data início</label>"
               + "				<label class='form-control' id='_data_inicio_tarefa' >"
                               if(typeof response.data_tarefa[0].data_inicio !== 'undefined' && response.data_tarefa[0].data_inicio !== null){
                                   texto2 = texto2 + response.data_tarefa[0].data_inicio;
                               }
                               texto2 = texto2 +"</label>"
               + "				<!-- <small id='emailHelp' class='form-text text-muted'>We'll never share your email with anyone else.</small> -->"
               + "			</div>"

               + "			<div class='form-group'>"
               + "				<label for='dataFim'>Data Fim</label>"
               + "				<label class='form-control' id='_data_fim_tarefa' >"
                               if(typeof response.data_tarefa[0].data_fim !== 'undefined' && response.data_tarefa[0].data_fim !== null){
                                   texto2 = texto2 +response.data_tarefa[0].data_fim;
                               }
                               texto2 = texto2 +"</label>"
               + "				<!-- <small id='emailHelp' class='form-text text-muted'>We'll never share your email with anyone else.</small> -->"
               + "			</div>"

               + "			<div class='form-group mb-3'>"
               + "				<div class='custom-control custom-switch mb-2'>"
               + "					<input type='checkbox' class='custom-control-input' id='_ativo_tarefa' "
               if(typeof response.data_tarefa[0].ativo !== 'undefined' && response.data_tarefa[0].ativo !== null && response.data_tarefa[0].ativo == 's'){
                   texto2 = texto2 + " checked ";
               }
               texto2 = texto2 +" >"
               + "					<label class='custom-control-label' for='_ativo_tarefa'>Tarefa ativa</label>"
               + "				</div>"
               + "			</div>"
               + "			<!-- <button type='submit' class='btn btn-primary'>Submit</button> -->"
               + "		</form>"
			   +"		<br><br>"
				+"		<div class='container'>"
				+"<a href='#' onClick='salvar_tarefa_edicao()'> "
			+"	<img src='/imagens/edicao/btn-salvar.png' width='180px' border='0' alt=''></a> "
				+"		</div>"
               + "	</div> <!-- end card-body-->"
               + "</div> <!-- end card-->";

               div.innerHTML = texto2;
              // alert(texto2)
               console.log(texto2);

               document.getElementById('div-tarefas').appendChild(div);

               if(typeof response.data_tarefa[0].esforco !== 'undefined' && response.data_tarefa[0].esforco !== null ){
                   document.getElementById('_esforco').value=response.data_tarefa[0].esforco;
                }

           /*$(document).ready(function () {
           $('#_data_inicio_tarefa').mask('99/99/9999');
           $('#_data_fim_tarefa').mask('99/99/9999');
           return false;
               
               });*/
           },
       });
   }
}

function salvar_tarefa_edicao(){



var id = document.getElementById('id-tarefa').value;
var nome_tarefa = document.getElementById('_nome_tarefa').value;
var descricao_tarefa = document.getElementById('_descricao_tarefa').value;
var esforco_tarefa = document.getElementById('_esforco').value;
var ativo = id == 0 ? 's' : document.getElementById('_ativo_tarefa').checked;
var responsavel = document.getElementById('_responsavel').value;

var nome_div_pai = 'div-backlog';

if(id > 0){
	nome_div_pai = document.getElementById("historia-"+id).parentElement.id;
}

var resp = document.getElementById("_responsavel");
var nome_responsavel = resp.options[resp.selectedIndex].text;

   $.ajax({
       url: "/tarefa/salvar_tarefa",
       data: { 
               id_tarefa: id, 
               nome: nome_tarefa,
               descricao: descricao_tarefa,
               esforco: esforco_tarefa,
               ativo: ativo,
               responsavel: responsavel
               },
       type: "POST",
       beforeSend: function() {
           //$("#" + formName).html(preloaderAzul);
       },  
       success: function(response) {
           console.log('Resposta ajax:' + response);

           if(response.message_erro !== ''){

               // document.getElementById("email-jogador").value = "";
               document.getElementById("resposta").innerHTML = "</br></br>"+response.message_erro;
                               
           }
           else {
               console.log('Sucesso: ' + response.message);

			  // console.log('Sucesso ultimo_id: ' + response.ultimo_id);

			   if(id == 0){
					id = response.ultimo_id;
			   }

               //location.reload();
			   // atualio o card no quadro
			   var div_cartao_atualizado = "<b><a href='#' data-toggle='modal' data-target='#myModal-tarefa' onClick='carregar_tarefa("+id+")' onmouseover='window.status=\"Editar Tarefa\"; return true;'>"
							+ id + " - "+ nome_tarefa +"</b></a> "
							+ "<br> Dificuldade: "+ esforco_tarefa +" pontos"
							+ "<br> Responsável: " + nome_responsavel;
				
				//document.getElementById("historia-"+id).innerHTML = div_cartao_atualizado;

				//alert(nome_div_pai);
				//return;

				$( "div" ).remove( "#historia-"+id );

				const div = document.createElement('div');
				div.setAttribute('class', 'efeito_pergaminho font-cards');
				div.setAttribute('id', "historia-"+id);
				

				div.innerHTML = div_cartao_atualizado;

				//alert(nome_div_pai.toString());

				document.getElementById(nome_div_pai.toString()).appendChild(div);

				modal_tarefa.style.display = "none";

				var millisecondsToWait = 2000;
	
				setTimeout(function() {
					// agora atualizamos o quadro das outras pessoas do time
					App.socket.emit('atualizar_quadros_pessoas_time', {
						div_cartao: div_cartao_atualizado,
						id_div: "historia-"+id,
						div_pai: nome_div_pai.toString(),
						time: '<%=time%>'
					});
				}, millisecondsToWait);

				
           }
           
       },
   });


}

</script>


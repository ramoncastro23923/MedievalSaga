<html>
  <head>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script src="/Chart.js/Chart.min.js"></script>
	<script src="/Chart.js/samples/utils.js"></script>
	<link rel="shortcut icon" href="/imagens/favicon.ico" type="image/x-icon" />
    

<style>
	canvas {
		-moz-user-select: none;
		-webkit-user-select: none;
		-ms-user-select: none;
	}
	.chart-container {
		width: 500px;
		margin-left: 40px;
		margin-right: 40px;
	}
	.container {
		display: flex;
		flex-direction: row;
		flex-wrap: wrap;
		justify-content: center;
	}

	@font-face {
		font-family: "RegencyScriptFLF Regular";
		src: url("/fonts/Burbank-Big-Condensed Black.ttf");
	}

	.font { 
		font-family: "RegencyScriptFLF Regular", Cursive; font-size: 32px;}
</style>
  
  </head>
  <body>
	
	<div class="container"><img src="/imagens/edicao/logo.png"  alt=""></div>

    <div class="container font">Time <%=time_email%></div>

    <div class="container">
      <div class="chart-container">
        <canvas id="control_chart"></canvas>
      </div>
      <div class="chart-container">
        <canvas id="throughput"></canvas>
      </div>
    </div>
    <div class="container">
      <div class="chart-container">
        <canvas id="canvas_cfd"></canvas>
      </div>
	  <div class="chart-container">
        <canvas id="chart_financeiro"></canvas>
      </div>
	  
    </div>
    
  </body>
</html>
<script>

  // cfd
  var config = {
			type: 'line',
			data: {
        // dias
        labels: [ <% for(var i=0; i < data_cfd.length; i++) { %>'<%=data_cfd[i].dia%>'<% if( (i+1) < data_cfd.length ){ %>,<% } %><% } %> ],
				datasets: [{
					label: 'Feito',
					borderColor: '#9ACD32',
					backgroundColor: '#9ACD32',
					data: [  <% for(var i=0; i < data_cfd.length; i++) { %>'<%=data_cfd[i].feito%>'<% if( (i+1) < data_cfd.length ){ %>,<% } %><% } %> ],
				}, 
				{
					label: 'Fazendo',
					borderColor: window.chartColors.yellow,
					backgroundColor: window.chartColors.yellow,
					data: [  <% for(var i=0; i < data_cfd.length; i++) { %>'<%=data_cfd[i].fazendo%>'<% if( (i+1) < data_cfd.length ){ %>,<% } %><% } %> ],
				},
				{
					label: 'Fazer',
					borderColor: '#00CED1',
					backgroundColor: '#00CED1',
					data: [  <% for(var i=0; i < data_cfd.length; i++) { %>'<%=data_cfd[i].fazer%>'<% if( (i+1) < data_cfd.length ){ %>,<% } %><% } %> ],
				},
				]
			},
			options: {
				responsive: true,
				title: {
					display: true,
					text: 'Cumulative Flow Diagram - CFD'
				},
				tooltips: {
					mode: 'index',
				},
				hover: {
					mode: 'index'
				},
				scales: {
					xAxes: [{
						scaleLabel: {
							display: true,
							labelString: 'Dias das Sprints'
						}
					}],
					yAxes: [{
						stacked: true,
						scaleLabel: {
							display: true,
							labelString: 'Qtde Itens'
						}
					}]
				}
			}
		};


  // control chart
  var scatterChartData = {
    datasets: [{
      label: 'Lead Time',
      borderColor: '#00CED1',
      backgroundColor: '#00CED1',
      data: [
          <% 
            var contador = 0; 
            var mapVazao = new Map();

            // ja inicializo o mapVazao com 4 sprints
            mapVazao.set(1, 0);
            mapVazao.set(2, 0);
            mapVazao.set(3, 0);
            mapVazao.set(4, 0);
          %>
          <% for(var i=0; i < data_control.length; i++) { %>
            <% if (data_control[i].lt > 0){ %> 
              <% contador++; %>
              { x: <%=contador%>, y: <%=data_control[i].lt%> },
            <% 
              if(data_control[i].fim <= 5){
                // se for menor que 5, entao eh da sprint 1
                // pego o valor para a sprint 1 e sempre somo + 1 a cada vez que entrar aqui.
                mapVazao.set(1, mapVazao.get(1) + 1);

                console.log('Mapa sprint 1: ' + mapVazao.get(1));
              }
              else if(data_control[i].fim > 5 && data_control[i].fim <= 10){
                // se for menor que 5, entao eh da sprint 1
                // pego o valor para a sprint 1 e sempre somo + 1 a cada vez que entrar aqui.
                mapVazao.set(2, mapVazao.get(2) + 1);

                console.log('Mapa sprint 2: ' + mapVazao.get(2));
              }
              else if(data_control[i].fim > 10 && data_control[i].fim <= 15){
                // se for menor que 5, entao eh da sprint 1
                // pego o valor para a sprint 1 e sempre somo + 1 a cada vez que entrar aqui.
                mapVazao.set(3, mapVazao.get(3) + 1);

                console.log('Mapa sprint 3: ' + mapVazao.get(3));
              }
              else{
                mapVazao.set(4, mapVazao.get(4) + 1);

                console.log('Mapa sprint 4: ' + mapVazao.get(4));
              }
            } %>
        <% } %>
        ]
    }, 
    ]
  };


  // throughput
  //var SPRINTS = ['1', '2', '3', '4', '5'];
  var color = Chart.helpers.color;
  var barChartData = {
    labels: ['1', '2', '3', '4'],
    datasets: [{
      label: 'Itens Entregues',
      //minBarLength: 2,
      //barPercentage: 1,
      //barThickness: 6,
      //maxBarThickness: 8,
      backgroundColor: color(window.chartColors.green).alpha(0.5).rgbString(),
      borderColor: window.chartColors.green,
      borderWidth: 1,
      data: [ <% var contador_t = 0; for (var [key, value] of mapVazao) {contador_t++; %><%=value%><% if( (contador_t) < mapVazao.size ){ %>,<% } %><% } %> ]
    }
    ]
  };

  // financeiro

  var config_financeiro = {
			type: 'line',
			data: {
<%

var qtde_dias = 20;
var mapDias = new Map();
var mapInvestimentos = new Map();
var mapMultas = new Map();

var conta_inv = 0;


for(z =1; z <=20; z++){
	mapDias.set(z, 0);
	mapInvestimentos.set(z, 0);
	mapMultas.set(z, 0);
}

var valorRoi = 0;

for(var i=0; i < data_financeiro.length; i++) {
	// pego o valor do dia e somo como o novo valor para este dia
	valorRoi = (data_financeiro[i].roi_diario) + mapDias.get(data_financeiro[i].dia_fim);

	if(data_financeiro[i].investimento_dia > 0){
		mapInvestimentos.set(data_financeiro[i].dia_fim, data_financeiro[i].investimento_dia);
	}
	
	if(data_financeiro[i].multa_dia > 0){
		mapMultas.set(data_financeiro[i].dia_fim, data_financeiro[i].multa_dia);
	}

	// atualizo o valor do dia com o valor acumulado
	mapDias.set(data_financeiro[i].dia_fim, valorRoi);
}

var totalAcumuladoDia = 0;
var totalAcumulado = 0;

for(var [key, value] of mapDias){
	totalAcumuladoDia = totalAcumuladoDia + value;

	totalAcumulado = totalAcumulado + totalAcumuladoDia + mapInvestimentos.get(key) - mapMultas.get(key);

	//totalAcumulado = totalAcumulado +  mapInvestimentos.get(key);

	mapDias.set(key, totalAcumulado);
}

%>
				
				labels: [ <% var cont = 0; for(var [key, value] of mapDias) { cont++; %>'<%=key%>'<% if( (cont) < mapDias.size ){ %>,<% } %><% } %> ],
				datasets: [
					{
						label: 'Retorno do Investimento (ROI)',
						backgroundColor: '#9ACD32',
						borderColor: '#9ACD32',
						data: [ <% var conta = 0; for(var [key, value] of mapDias) { conta++; %>'<%=value%>'<% if( (conta) < mapDias.size ){ %>,<% } %><% } %> ],
						fill: false,
					},
					{
						label: '$ Investimentos',
						backgroundColor: window.chartColors.yellow,
						borderColor: window.chartColors.yellow,
						data: [ <% var conta_inv = 0; for(var [key, value] of mapDias) { conta_inv++; %>'<%=mapInvestimentos.get(key)%>'<% if( (conta_inv) < mapDias.size ){ %>,<% } %><% } %> ],
						fill: false,
					},
					{
						label: '$ Multas',
						backgroundColor: '#A52A2A',
						borderColor: '#A52A2A',
						data: [ <% var conta_inv = 0; for(var [key, value] of mapDias) { conta_inv++; %>'<%=mapMultas.get(key)%>'<% if( (conta_inv) < mapDias.size ){ %>,<% } %><% } %> ],
						fill: false,
					}
				]
			},
			options: {
				responsive: true,
				title: {
					display: true,
					text: 'Evolução Financeira'
				},
				tooltips: {
					mode: 'index',
					intersect: false,
				},
				hover: {
					mode: 'nearest',
					intersect: true
				},
				scales: {
					xAxes: [{
						display: true,
						scaleLabel: {
							display: true,
							labelString: 'Dias'
						}
					}],
					yAxes: [{
						display: true,
						scaleLabel: {
							display: true,
							labelString: 'Valores'
						}
					}]
				}
			}
		};


	window.onload = function() {

      // cfd
      var ctx_cfd = document.getElementById('canvas_cfd').getContext('2d');
			window.myLine = new Chart(ctx_cfd, config);

      // throughput
      var ctx_c = document.getElementById('throughput').getContext('2d');
			window.myBar = new Chart(ctx_c, {
				type: 'bar',
				data: barChartData,
				options: {
					responsive: true,
					legend: {
						position: 'top',
					},
					title: {
						display: true,
						text: 'Taxa de vazão (Throughput)'
					},
					scales: {
						xAxes: [{
								scaleLabel: {
										display: true,
										labelString: 'Sprints'
									}
								}],
						yAxes: [{
							stacked: true,
							scaleLabel: {
								display: true,
								labelString: 'Qtde itens entregues'
							}
						}]
					}
				}
			});
      

      		// control chart
			var ctx = document.getElementById('control_chart').getContext('2d');
			window.myScatter = Chart.Scatter(ctx, {
				data: scatterChartData,
				options: {
					title: {
						display: true,
						text: 'Control Chart'
					},
					scales: {
						xAxes: [{
							scaleLabel: {
								display: true,
								labelString: 'Itens Entregues'
							}
						}],
						yAxes: [{
							stacked: true,
							scaleLabel: {
								display: true,
								labelString: 'Qtde de dias'
							}
						}]
					}
				}
			});

			// financeiro
			var ctx_financeiro = document.getElementById('chart_financeiro').getContext('2d');
			window.myLine = new Chart(ctx_financeiro, config_financeiro);
		};

  </script>
  